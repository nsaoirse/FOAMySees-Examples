FOAMySeesInstance.osi=ops.model('basic','-ndm',3,'-ndf',6)

ops.wipe()


FOAMySeesInstance.coupledNodes=[]

nElemBOTTOM=19
nElem2nd=19
nElemTOP=4

numX=2
numY=2
numZ=6

ColumnConnectionLength=0.05
BeamConnLength=0.0254*4

BuildingLocation=[(40.68230+41.689830)/2, 0.0]
BuildingDepth=41.689830-40.68230
BuildingWidth=0.508*2
Xmin=BuildingLocation[0]-BuildingDepth/2
Xmax=BuildingLocation[0]+BuildingDepth/2
Ymin=BuildingLocation[1]-BuildingWidth/2
Ymax=BuildingLocation[1]+BuildingWidth/2

zPileBase=1.0
zBase=2.0
z1stFloor=2.6180000
z2ndFloor=3.819
z3rdFloor=2.6180000+(27.1*0.0254)+(18*0.0254)
z4thFloor=2.6180000+(27.1*0.0254)+(18*0.0254)*2

beamType='NLBeamCol'
beamType='forceBeamCol'


beamType='elastic'
beamType='dispBeamCol'


noBraces=0
useBeams=1

constraintType='EQDOFMIXED'


constraintType='RIGIDLINK'	
constraintType='EQDOF'

useSlabs=1

BaseIsolated=0

zBumpDebug=0.0

numDOF=6
rcdofs=[1,1,2,2,3,3,4,4,5,5,6,6]
dofs=[1,2,3]



A=0.49*0.00064516
Iz=0.118*0.00064516*0.00064516
Iy=0.118*0.00064516*0.00064516
Jxx=0.237*0.00064516*0.00064516
E=29000*6895000 #ksi*conversion
G=E/(2*(1.3))
secTag=101
ops.section('Elastic', secTag, E, A, Iz, Iy, G, Jxx)

ops.beamIntegration('Lobatto', 3,secTag, 2)
# section('Elastic', secTag, E_mod, A, Iz, G_mod=None)
A=0.84*0.00064516
Iz=0.486*0.00064516*0.00064516
Iy=0.486*0.00064516*0.00064516
Jxx=0.796*0.00064516*0.00064516
E=29000*6895000 #ksi*conversion
G=E/(2*(1.3))
secTag=15
ops.section('Elastic', secTag, E, A, Iz, Iy, G, Jxx)


ops.beamIntegration('Lobatto', 2, secTag, 2)

## Materials
matTag=600
Fy=56*6895000 #ksi*conversion
E0=29000*6895000 #ksi*conversion
b=0.01
params=[18.00000, 0.92500, 0.15000]
ops.uniaxialMaterial('Steel02', matTag, Fy, E0, b, *params)
ops.nDMaterial('PlateRebar', matTag+2, matTag, 90)
ops.nDMaterial('PlateRebar', matTag+3, matTag, 0)

matTag=601
Fy=50*6895000 #ksi*conversion
E0=29000*6895000 #ksi*conversion
b=0.01
params=[18.00000, 0.92500, 0.15000]
ops.uniaxialMaterial('Steel02', matTag, Fy, E0, b, *params)

matTag=650
fpc=-7.2*6895000 #ksi*conversion
epsc0=-0.00326
fpcu=-1.44000*6895000 #ksi*conversion
epsU=-0.01631
lambda1=0.10000
ft=0.63640*6895000 #ksi*conversion
Ets=290.47375*6895000 #ksi*conversion
ops.uniaxialMaterial('Concrete02', matTag, fpc, epsc0, fpcu, epsU, lambda1, ft, Ets)
#1,126.47 MPa
E=33347254690.9 #pa
ops.nDMaterial('PlaneStressUserMaterial',matTag+2,40,7,fpc,ft,fpcu,epsc0,epsU, ft/Ets,0.3)

ops.nDMaterial('PlateFromPlaneStress',matTag+1,matTag+2,1.25e10)

eleType='shell'
eleArgs=[100]
       
h=0.0254*6	 #SLAB THICKNESS IN METERS> WHAT IS THIS? CHECK KENS THESIS
       
nu=0.3
       
E=5e9 #concrete
       
rho=2400   #SLAB DENSITY > WHAT IS THIS? CHECK KENS THESIS
rebarct=5
rebarlayers=1
curtainthickness=((0.5*0.0254)/2)**2 * np.pi * rebarct * rebarlayers /1.104
print('curtainThickness', curtainthickness)
nLayers=7

dummyMatTag=1010101010
nu=0.25
#ops.nDMaterial('ElasticIsotropic', dummyMatTag, E, nu)
#ops.nDMaterial('PlateFiber', dummyMatTag+1, dummyMatTag)
#ops.nDMaterial('PlateFromPlaneStress',dummyMatTag+1,dummyMatTag,E*0.5)
rho=2400

matConc=dummyMatTag+1
matSteelH=dummyMatTag+1
matSteelV=dummyMatTag+1
matConc=651
matSteelH=603
matSteelV=602

mats=[[matConc, 1.25*0.0254],[matSteelV, curtainthickness],[matSteelH, curtainthickness],[651, (3.5*0.0254)-curtainthickness*4],[matSteelH, curtainthickness],[matSteelV, curtainthickness],[matConc, 1.25*0.0254]]

#mats=[[ 1.25*0.0254,matTag+1],[curtainthickness,602],[ 3.5*0.0254-curtainthickness*2,matTag+1],[ curtainthickness,602],[ 1.25*0.0254,matTag+1]]
#mats=[[602, curtainthickness],[602, curtainthickness],[602, curtainthickness]]

secTag=100
#ops.section('LayeredShell', secTag, nLayers, matConc, 1.25*0.0254,matSteelV, curtainthickness,matSteelH, curtainthickness, 651, (3.5*0.0254)-curtainthickness*4,matSteelH, curtainthickness,matSteelV, curtainthickness,matConc, 1.25*0.0254)       
ops.section('ElasticMembranePlateSection', secTag, E, nu, 6*0.0254, rho)










OuterRad=2
OuterDiam=OuterRad*2
CFTWallT=0.25

## Sections]
secTag=501
ops.section('Fiber', secTag, '-GJ', 10000000000.00000)

matTag=650
numSubdivCirc=8
numSubdivRad=8
center=[0.00000, 0.00000]
rad=[0.00000, (OuterRad-CFTWallT)*0.0254] #INCH*conversionToMeters
ang=[0.00000, 360.00000]
ops.patch('circ', matTag, numSubdivCirc, numSubdivRad, *center, *rad, *ang)

matTag=600
numSubdivCirc=8
numSubdivRad=4
center=[0.00000, 0.00000]
rad=[(OuterRad-CFTWallT)*0.0254, OuterRad*0.0254] #INCH*conversionToMeters
ang=[0.00000, 360.00000]
ops.patch('circ', matTag, numSubdivCirc, numSubdivRad, *center, *rad, *ang)
ops.beamIntegration('Lobatto', 1, secTag, 2)




# below Grade Beams

# SUB STORY COLUMNS
##################################################################################################################################################################


slabMass=1000

nElem=nElemBOTTOM
Zbase=zPileBase+ColumnConnectionLength
Ztop=zBase-ColumnConnectionLength
sectionLength=Ztop-Zbase
pileMass=sectionLength*7840*((0.5*OuterDiam*0.0254)**2 - (0.5*(OuterDiam-CFTWallT)*0.0254)**2)*(0.6180000)*3.141519 + 2400*((0.5*(OuterDiam-CFTWallT)*0.0254)**2)*3.141519

subStoryColumnNodes=[]

subStoryColumnBaseNodes=[]
pileLocs=[[Xmin,Ymin,Ztop],[Xmin,Ymax,Ztop],[Xmax,Ymax,Ztop],[Xmax,Ymin,Ztop]]

ops.node(123456780,Xmin,Ymin,1.0) 
ops.node(123456781,Xmin,Ymax,1.0)
ops.node(123456782,Xmax,Ymax,1.0)
ops.node(123456783,Xmax,Ymin,1.0)
bottombottomnodes=[123456780,123456781,123456782,123456783]
pc=2000
startElem=90000000
startNode=90000000
soilnodes=[]
for location in pileLocs:

	node1=[location[0], location[1],  Zbase]
	node2=[location[0], location[1], Ztop]

	beamNormal=[-1,0,0]
	startElem+=pc
	startNode+=pc
	count=0
	xNodeList=np.linspace(node1[0],node2[0],nElemBOTTOM+1)
	yNodeList=np.linspace(node1[1],node2[1],nElemBOTTOM+1)
	zNodeList=np.linspace(node1[2],node2[2],nElemBOTTOM+1)
	nodalMass=(pileMass)/len(xNodeList)

	for nodeNum in range(pc*1000, pc*1000+len(xNodeList)):
		ops.node(nodeNum, xNodeList[nodeNum-pc*1000],yNodeList[nodeNum-pc*1000],zNodeList[nodeNum-pc*1000])
        
	
	coordTransf = 'Corotational'

	coordTransf='Linear'
	coordTransf='PDelta'
	#############################

	## Model
	subStoryColumnBaseNodes.append(pc*1000)

	subStoryColumnNodes.append(pc*1000+len(xNodeList)-1)

	nodRotMass=0.
	for nodeNum in range(pc*1000, pc*1000+len(xNodeList)):
		ops.mass(nodeNum,*[nodalMass,nodalMass,nodalMass,nodRotMass,nodRotMass,nodRotMass])

	for nodeNum in range(1 + pc*1000, pc*1000+len(xNodeList)):
		ops.geomTransf(coordTransf, pc*1000+nodeNum+100000, beamNormal[0],beamNormal[1],beamNormal[2])
		
		if beamType=='elastic':
			ops.element('elasticBeamColumn', nodeNum, nodeNum-1, nodeNum, 501, pc*1000+nodeNum+100000)
		elif beamType=='dispBeamCol':
			ops.element('dispBeamColumn', nodeNum, *[nodeNum-1, nodeNum],pc*1000+nodeNum+100000, 1,'-mass', 3000)
		elif beamType=='forceBeamCol':
			ops.element('forceBeamColumn', pc*1000+nodeNum, *[nodeNum-1, nodeNum], pc*1000+nodeNum+100000, 1)		
		elif beamType=='NLBeamCol':
			ops.element('nonlinearBeamColumn', nodeNum, *[nodeNum-1, nodeNum],3,secTag,pc*1000+nodeNum+100000,'-iter', 1)
	pc+=1
ct=0
Zbase=zBase
Ztop=zBase
firstStoryColumnBaseNodes=[]
Zbase=zBase
Ztop=z2ndFloor
sectionLength=Ztop-Zbase
pileMass=sectionLength*7840*((0.5*OuterDiam*0.0254)**2 - (0.5*(OuterDiam-CFTWallT)*0.0254)**2)*(0.6180000)*3.141519 + 2400*((0.5*(OuterDiam-CFTWallT)*0.0254)**2)*3.141519


firstStoryColumnNodes=[]
firstStoryColumnBaseNodes=[]

pileLocs=[[Xmin,Ymin,Ztop],[Xmin,Ymax,Ztop],[Xmax,Ymax,Ztop],[Xmax,Ymin,Ztop]]




pc=1000
for location in pileLocs:

	node1=[location[0], location[1],  Zbase]
	node2=[location[0], location[1], Ztop]

	beamNormal=[-1,0,0]


	xNodeList=np.linspace(node1[0],node2[0],nElem2nd+1)
	yNodeList=np.linspace(node1[1],node2[1],nElem2nd+1)
	zNodeList=np.linspace(node1[2],node2[2],nElem2nd+1)
	nodalMass=(pileMass)/len(xNodeList)

	for nodeNum in range(pc*1000, pc*1000+len(xNodeList)):
		ops.node(nodeNum, xNodeList[nodeNum-pc*1000],yNodeList[nodeNum-pc*1000],zNodeList[nodeNum-pc*1000])

	coordTransf = 'Corotational'

	coordTransf='Linear'
	coordTransf='PDelta'
	#############################

	## Model
	firstStoryColumnBaseNodes.append(pc*1000)

	firstStoryColumnNodes.append(pc*1000+len(xNodeList)-1)

	nodRotMass=0.
	for nodeNum in range(pc*1000, pc*1000+len(xNodeList)):
		ops.mass(nodeNum,*[nodalMass,nodalMass,nodalMass,nodRotMass,nodRotMass,nodRotMass])

	for nodeNum in range(1 + pc*1000, pc*1000+len(xNodeList)):
		ops.geomTransf(coordTransf, pc*1000+nodeNum+100000, beamNormal[0],beamNormal[1],beamNormal[2])
		
		if beamType=='elastic':
			ops.element('elasticBeamColumn', nodeNum, nodeNum-1, nodeNum, 501, pc*1000+nodeNum+100000)
		elif beamType=='dispBeamCol':
			ops.element('dispBeamColumn', nodeNum, *[nodeNum-1, nodeNum],pc*1000+nodeNum+100000, 1,'-mass', 3000)
		elif beamType=='forceBeamCol':
			ops.element('forceBeamColumn', nodeNum, *[nodeNum-1, nodeNum], pc*1000+nodeNum+100000, 1)		
		elif beamType=='NLBeamCol':
			ops.element('nonlinearBeamColumn', nodeNum, *[nodeNum-1, nodeNum],3,secTag,pc*1000+nodeNum+100000,'-iter', 1)
	pc+=1

StrainGaugeElements=[]


# beamEndNode=firstSlabCornerNodeNums[-1][0]
for corner in bottombottomnodes:
	columnTopNode=subStoryColumnBaseNodes[ct]
	print(columnTopNode,'columnTopNode')
	columnBottomNode=corner
	print(columnBottomNode,'columnBottomNode')
	ct+=1	
	beamNormal=[-1,0,0]
	ops.geomTransf(coordTransf, pc*1000+ct+100000, beamNormal[0],beamNormal[1],beamNormal[2])
	nodeNum+=1

	if beamType=='elastic':
		ops.element('elasticBeamColumn', nodeNum, columnBottomNode, columnTopNode, 501, pc*1000+ct+100000)  		
	elif beamType=='dispBeamCol':
  		ops.element('dispBeamColumn', nodeNum, *[ columnBottomNode, columnTopNode],pc*1000+ct+100000, 1)		 #, '-cMass', '-mass', mass=0.0)
	elif beamType=='forceBeamCol':
  		ops.element('forceBeamColumn', nodeNum, *[ columnBottomNode, columnTopNode], pc*1000+ct+100000, 1)		
	elif beamType=='NLBeamCol':
  		ops.element('nonlinearBeamColumn', nodeNum, *[ columnBottomNode, columnTopNode],3,secTag,pc*1000+ct+100000,'-iter', 1)
	StrainGaugeElements.append(nodeNum)

ct=0
for corner in subStoryColumnNodes:
	columnTopNode=firstStoryColumnBaseNodes[ct]
	print(columnTopNode,'columnTopNode')
	columnBottomNode=corner
	print(columnBottomNode,'columnBottomNode')
	ct+=1	
	beamNormal=[-1,0,0]
	ops.geomTransf(coordTransf, pc*1000+ct+200000, beamNormal[0],beamNormal[1],beamNormal[2])
	nodeNum+=1

	if beamType=='elastic':
		ops.element('elasticBeamColumn', nodeNum, columnBottomNode, columnTopNode, 501, pc*1000+ct+100000)  		
	elif beamType=='dispBeamCol':
  		ops.element('dispBeamColumn', nodeNum, *[ columnBottomNode, columnTopNode],pc*1000+ct+100000, 1)		 #, '-cMass', '-mass', mass=0.0)
	elif beamType=='forceBeamCol':
  		ops.element('forceBeamColumn', nodeNum, *[ columnBottomNode, columnTopNode], pc*1000+ct+100000, 1)		
	elif beamType=='NLBeamCol':
  		ops.element('nonlinearBeamColumn', nodeNum, *[ columnBottomNode, columnTopNode],3,secTag,pc*1000+ct+100000,'-iter', 1)
	StrainGaugeElements.append(nodeNum)
ct=0
ops.fixZ(zPileBase,*[1,1,1,1,1,1])


Zbase=zBase
Ztop=z2ndFloor


cNodes=[]
rNodes=[]
ops.node(9,  40.6823, -0.508, 3.829) 
ops.node(10, 40.6823, -0.508, 3.727389) 
ops.node(11, 40.6823, -0.508, 3.625778) 
ops.node(12, 40.6823, -0.508, 3.524167) 
ops.node(13, 40.6823, -0.508, 3.422556) 
ops.node(14, 40.6823, -0.508, 3.320944) 
ops.node(15, 40.6823, -0.508, 3.219333) 
ops.node(16, 40.6823, -0.508, 3.117722) 
ops.node(17, 40.6823, -0.508, 3.016111) 
ops.node(18, 40.6823, -0.508, 2.9145) 
ops.node(19, 40.6823, -0.508, 2.812889) 
ops.node(20, 40.6823, -0.508, 2.711278) 
ops.node(21, 40.6823, -0.508, 2.609667) 
ops.node(22, 40.6823, -0.508, 2.508056) 
ops.node(23, 40.6823, -0.508, 2.406444) 
ops.node(24, 40.6823, -0.508, 2.304833) 
ops.node(25, 40.6823, -0.508, 2.203222) 
ops.node(26, 40.6823, -0.508, 2.101611) 
ops.node(27, 40.6823, -0.508, 2.0) 
ops.node(28, 40.6823, -0.4064, 2.0) 
ops.node(29, 40.6823, -0.3048, 2.0) 
ops.node(30, 40.6823, -0.2032, 2.0) 
ops.node(31, 40.6823, -0.1016, 2.0) 
ops.node(32, 40.6823, 0.0, 2.0) 
ops.node(33, 40.6823, 0.1016, 2.0) 
ops.node(34, 40.6823, 0.2032, 2.0) 
ops.node(35, 40.6823, 0.3048, 2.0) 
ops.node(36, 40.6823, 0.4064, 2.0) 
ops.node(37, 40.6823, 0.508, 2.0) 
ops.node(38, 40.6823, 0.508, 2.101611) 
ops.node(39, 40.6823, 0.508, 2.203222) 
ops.node(40, 40.6823, 0.508, 2.304833) 
ops.node(41, 40.6823, 0.508, 2.406444) 
ops.node(42, 40.6823, 0.508, 2.508056) 
ops.node(43, 40.6823, 0.508, 2.609667) 
ops.node(44, 40.6823, 0.508, 2.711278) 
ops.node(45, 40.6823, 0.508, 2.812889) 
ops.node(46, 40.6823, 0.508, 2.9145) 
ops.node(47, 40.6823, 0.508, 3.016111) 
ops.node(48, 40.6823, 0.508, 3.117722) 
ops.node(49, 40.6823, 0.508, 3.219333) 
ops.node(50, 40.6823, 0.508, 3.320944) 
ops.node(51, 40.6823, 0.508, 3.422556) 
ops.node(52, 40.6823, 0.508, 3.524167) 
ops.node(53, 40.6823, 0.508, 3.625778) 
ops.node(54, 40.6823, 0.508, 3.727389) 
ops.node(55, 40.6823, 0.508, 3.829) 
ops.node(56, 40.6823, 0.4064, 3.829) 
ops.node(57, 40.6823, 0.3048, 3.829) 
ops.node(58, 40.6823, 0.2032, 3.829) 
ops.node(59, 40.6823, 0.1016, 3.829) 
ops.node(60, 40.6823, 0.0, 3.829) 
ops.node(61, 40.6823, -0.1016, 3.829) 
ops.node(62, 40.6823, -0.2032, 3.829) 
ops.node(63, 40.6823, -0.3048, 3.829) 
ops.node(64, 40.6823, -0.4064, 3.829) 
ops.node(65, 40.6823, 0.4064, 2.9145) 
ops.node(66, 40.6823, 0.3048, 2.9145) 
ops.node(67, 40.6823, 0.2032, 2.9145) 
ops.node(68, 40.6823, 0.1016, 2.9145) 
ops.node(69, 40.6823, 0.0, 2.9145) 
ops.node(70, 40.6823, -0.1016, 2.9145) 
ops.node(71, 40.6823, -0.2032, 2.9145) 
ops.node(72, 40.6823, -0.3048, 2.9145) 
ops.node(73, 40.6823, -0.4064, 2.9145) 
ops.node(74, 40.6823, 0.0, 2.812889) 
ops.node(75, 40.6823, 0.0, 2.711278) 
ops.node(76, 40.6823, 0.0, 2.609667) 
ops.node(77, 40.6823, 0.0, 2.508056) 
ops.node(78, 40.6823, 0.0, 2.406444) 
ops.node(79, 40.6823, 0.0, 2.304833) 
ops.node(80, 40.6823, 0.0, 2.203222) 
ops.node(81, 40.6823, 0.0, 2.101611) 
ops.node(82, 40.6823, 0.1016, 2.508056) 
ops.node(83, 40.6823, 0.2032, 2.508056) 
ops.node(84, 40.6823, 0.3048, 2.508056) 
ops.node(85, 40.6823, 0.4064, 2.508056) 
ops.node(86, 40.6823, 0.2032, 2.609667) 
ops.node(87, 40.6823, 0.2032, 2.711278) 
ops.node(88, 40.6823, 0.2032, 2.812889) 
ops.node(89, 40.6823, 0.1016, 2.711278) 
ops.node(90, 40.6823, 0.1016, 2.609667) 
ops.node(91, 40.6823, 0.1016, 2.812889) 
ops.node(92, 40.6823, 0.4064, 2.711278) 
ops.node(93, 40.6823, 0.3048, 2.711278) 
ops.node(94, 40.6823, 0.4064, 2.609667) 
ops.node(95, 40.6823, 0.3048, 2.609667) 
ops.node(96, 40.6823, 0.4064, 2.812889) 
ops.node(97, 40.6823, 0.3048, 2.812889) 
ops.node(98, 40.6823, 0.1016, 2.304833) 
ops.node(99, 40.6823, 0.2032, 2.304833) 
ops.node(100, 40.6823, 0.3048, 2.304833) 
ops.node(101, 40.6823, 0.4064, 2.304833) 
ops.node(102, 40.6823, 0.2032, 2.406444) 
ops.node(103, 40.6823, 0.1016, 2.406444) 
ops.node(104, 40.6823, 0.3048, 2.406444) 
ops.node(105, 40.6823, 0.4064, 2.406444) 
ops.node(106, 40.6823, 0.2032, 2.101611) 
ops.node(107, 40.6823, 0.2032, 2.203222) 
ops.node(108, 40.6823, 0.1016, 2.101611) 
ops.node(109, 40.6823, 0.1016, 2.203222) 
ops.node(110, 40.6823, 0.4064, 2.101611) 
ops.node(111, 40.6823, 0.3048, 2.101611) 
ops.node(112, 40.6823, 0.4064, 2.203222) 
ops.node(113, 40.6823, 0.3048, 2.203222) 
ops.node(114, 40.6823, -0.4064, 2.508056) 
ops.node(115, 40.6823, -0.3048, 2.508056) 
ops.node(116, 40.6823, -0.2032, 2.508056) 
ops.node(117, 40.6823, -0.1016, 2.508056) 
ops.node(118, 40.6823, -0.3048, 2.609667) 
ops.node(119, 40.6823, -0.3048, 2.711278) 
ops.node(120, 40.6823, -0.3048, 2.812889) 
ops.node(121, 40.6823, -0.4064, 2.711278) 
ops.node(122, 40.6823, -0.4064, 2.609667) 
ops.node(123, 40.6823, -0.4064, 2.812889) 
ops.node(124, 40.6823, -0.1016, 2.711278) 
ops.node(125, 40.6823, -0.2032, 2.711278) 
ops.node(126, 40.6823, -0.1016, 2.609667) 
ops.node(127, 40.6823, -0.2032, 2.609667) 
ops.node(128, 40.6823, -0.1016, 2.812889) 
ops.node(129, 40.6823, -0.2032, 2.812889) 
ops.node(130, 40.6823, -0.4064, 2.304833) 
ops.node(131, 40.6823, -0.3048, 2.304833) 
ops.node(132, 40.6823, -0.2032, 2.304833) 
ops.node(133, 40.6823, -0.1016, 2.304833) 
ops.node(134, 40.6823, -0.3048, 2.406444) 
ops.node(135, 40.6823, -0.4064, 2.406444) 
ops.node(136, 40.6823, -0.2032, 2.406444) 
ops.node(137, 40.6823, -0.1016, 2.406444) 
ops.node(138, 40.6823, -0.3048, 2.101611) 
ops.node(139, 40.6823, -0.3048, 2.203222) 
ops.node(140, 40.6823, -0.4064, 2.101611) 
ops.node(141, 40.6823, -0.4064, 2.203222) 
ops.node(142, 40.6823, -0.1016, 2.101611) 
ops.node(143, 40.6823, -0.2032, 2.101611) 
ops.node(144, 40.6823, -0.1016, 2.203222) 
ops.node(145, 40.6823, -0.2032, 2.203222) 
ops.node(146, 40.6823, 0.0, 3.727389) 
ops.node(147, 40.6823, 0.0, 3.625778) 
ops.node(148, 40.6823, 0.0, 3.524167) 
ops.node(149, 40.6823, 0.0, 3.422556) 
ops.node(150, 40.6823, 0.0, 3.320944) 
ops.node(151, 40.6823, 0.0, 3.219333) 
ops.node(152, 40.6823, 0.0, 3.117722) 
ops.node(153, 40.6823, 0.0, 3.016111) 
ops.node(154, 40.6823, 0.1016, 3.422556) 
ops.node(155, 40.6823, 0.2032, 3.422556) 
ops.node(156, 40.6823, 0.3048, 3.422556) 
ops.node(157, 40.6823, 0.4064, 3.422556) 
ops.node(158, 40.6823, 0.2032, 3.524167) 
ops.node(159, 40.6823, 0.2032, 3.625778) 
ops.node(160, 40.6823, 0.2032, 3.727389) 
ops.node(161, 40.6823, 0.1016, 3.625778) 
ops.node(162, 40.6823, 0.1016, 3.524167) 
ops.node(163, 40.6823, 0.1016, 3.727389) 
ops.node(164, 40.6823, 0.4064, 3.625778) 
ops.node(165, 40.6823, 0.3048, 3.625778) 
ops.node(166, 40.6823, 0.4064, 3.524167) 
ops.node(167, 40.6823, 0.3048, 3.524167) 
ops.node(168, 40.6823, 0.4064, 3.727389) 
ops.node(169, 40.6823, 0.3048, 3.727389) 
ops.node(170, 40.6823, 0.1016, 3.219333) 
ops.node(171, 40.6823, 0.2032, 3.219333) 
ops.node(172, 40.6823, 0.3048, 3.219333) 
ops.node(173, 40.6823, 0.4064, 3.219333) 
ops.node(174, 40.6823, 0.2032, 3.320944) 
ops.node(175, 40.6823, 0.1016, 3.320944) 
ops.node(176, 40.6823, 0.3048, 3.320944) 
ops.node(177, 40.6823, 0.4064, 3.320944) 
ops.node(178, 40.6823, 0.2032, 3.016111) 
ops.node(179, 40.6823, 0.2032, 3.117722) 
ops.node(180, 40.6823, 0.1016, 3.016111) 
ops.node(181, 40.6823, 0.1016, 3.117722) 
ops.node(182, 40.6823, 0.4064, 3.016111) 
ops.node(183, 40.6823, 0.3048, 3.016111) 
ops.node(184, 40.6823, 0.4064, 3.117722) 
ops.node(185, 40.6823, 0.3048, 3.117722) 
ops.node(186, 40.6823, -0.4064, 3.422556) 
ops.node(187, 40.6823, -0.3048, 3.422556) 
ops.node(188, 40.6823, -0.2032, 3.422556) 
ops.node(189, 40.6823, -0.1016, 3.422556) 
ops.node(190, 40.6823, -0.3048, 3.524167) 
ops.node(191, 40.6823, -0.3048, 3.625778) 
ops.node(192, 40.6823, -0.3048, 3.727389) 
ops.node(193, 40.6823, -0.4064, 3.625778) 
ops.node(194, 40.6823, -0.4064, 3.524167) 
ops.node(195, 40.6823, -0.4064, 3.727389) 
ops.node(196, 40.6823, -0.1016, 3.625778) 
ops.node(197, 40.6823, -0.2032, 3.625778) 
ops.node(198, 40.6823, -0.1016, 3.524167) 
ops.node(199, 40.6823, -0.2032, 3.524167) 
ops.node(200, 40.6823, -0.1016, 3.727389) 
ops.node(201, 40.6823, -0.2032, 3.727389) 
ops.node(202, 40.6823, -0.4064, 3.219333) 
ops.node(203, 40.6823, -0.3048, 3.219333) 
ops.node(204, 40.6823, -0.2032, 3.219333) 
ops.node(205, 40.6823, -0.1016, 3.219333) 
ops.node(206, 40.6823, -0.3048, 3.320944) 
ops.node(207, 40.6823, -0.4064, 3.320944) 
ops.node(208, 40.6823, -0.2032, 3.320944) 
ops.node(209, 40.6823, -0.1016, 3.320944) 
ops.node(210, 40.6823, -0.3048, 3.016111) 
ops.node(211, 40.6823, -0.3048, 3.117722) 
ops.node(212, 40.6823, -0.4064, 3.016111) 
ops.node(213, 40.6823, -0.4064, 3.117722) 
ops.node(214, 40.6823, -0.1016, 3.016111) 
ops.node(215, 40.6823, -0.2032, 3.016111) 
ops.node(216, 40.6823, -0.1016, 3.117722) 
ops.node(217, 40.6823, -0.2032, 3.117722) 
ops.node(218, 40.7839, -0.508, 3.829) 
ops.node(219, 40.8855, -0.508, 3.829) 
ops.node(220, 40.9871, -0.508, 3.829) 
ops.node(221, 41.0887, -0.508, 3.829) 
ops.node(222, 41.1903, -0.508, 3.829) 
ops.node(223, 41.2919, -0.508, 3.829) 
ops.node(224, 41.3935, -0.508, 3.829) 
ops.node(225, 41.4951, -0.508, 3.829) 
ops.node(226, 41.5967, -0.508, 3.829) 
ops.node(227, 41.6983, -0.508, 3.829) 
ops.node(228, 41.6983, -0.508, 3.727389) 
ops.node(229, 41.6983, -0.508, 3.625778) 
ops.node(230, 41.6983, -0.508, 3.524167) 
ops.node(231, 41.6983, -0.508, 3.422556) 
ops.node(232, 41.6983, -0.508, 3.320944) 
ops.node(233, 41.6983, -0.508, 3.219333) 
ops.node(234, 41.6983, -0.508, 3.117722) 
ops.node(235, 41.6983, -0.508, 3.016111) 
ops.node(236, 41.6983, -0.508, 2.9145) 
ops.node(237, 41.6983, -0.508, 2.812889) 
ops.node(238, 41.6983, -0.508, 2.711278) 
ops.node(239, 41.6983, -0.508, 2.609667) 
ops.node(240, 41.6983, -0.508, 2.508056) 
ops.node(241, 41.6983, -0.508, 2.406444) 
ops.node(242, 41.6983, -0.508, 2.304833) 
ops.node(243, 41.6983, -0.508, 2.203222) 
ops.node(244, 41.6983, -0.508, 2.101611) 
ops.node(245, 41.6983, -0.508, 2.0) 
ops.node(246, 41.5967, -0.508, 2.0) 
ops.node(247, 41.4951, -0.508, 2.0) 
ops.node(248, 41.3935, -0.508, 2.0) 
ops.node(249, 41.2919, -0.508, 2.0) 
ops.node(250, 41.1903, -0.508, 2.0) 
ops.node(251, 41.0887, -0.508, 2.0) 
ops.node(252, 40.9871, -0.508, 2.0) 
ops.node(253, 40.8855, -0.508, 2.0) 
ops.node(254, 40.7839, -0.508, 2.0) 
ops.node(255, 41.5967, -0.508, 2.9145) 
ops.node(256, 41.4951, -0.508, 2.9145) 
ops.node(257, 41.3935, -0.508, 2.9145) 
ops.node(258, 41.2919, -0.508, 2.9145) 
ops.node(259, 41.1903, -0.508, 2.9145) 
ops.node(260, 41.0887, -0.508, 2.9145) 
ops.node(261, 40.9871, -0.508, 2.9145) 
ops.node(262, 40.8855, -0.508, 2.9145) 
ops.node(263, 40.7839, -0.508, 2.9145) 
ops.node(264, 41.1903, -0.508, 3.016111) 
ops.node(265, 41.1903, -0.508, 3.117722) 
ops.node(266, 41.1903, -0.508, 3.219333) 
ops.node(267, 41.1903, -0.508, 3.320944) 
ops.node(268, 41.1903, -0.508, 3.422556) 
ops.node(269, 41.1903, -0.508, 3.524167) 
ops.node(270, 41.1903, -0.508, 3.625778) 
ops.node(271, 41.1903, -0.508, 3.727389) 
ops.node(272, 41.2919, -0.508, 3.320944) 
ops.node(273, 41.3935, -0.508, 3.320944) 
ops.node(274, 41.4951, -0.508, 3.320944) 
ops.node(275, 41.5967, -0.508, 3.320944) 
ops.node(276, 41.3935, -0.508, 3.219333) 
ops.node(277, 41.3935, -0.508, 3.117722) 
ops.node(278, 41.3935, -0.508, 3.016111) 
ops.node(279, 41.2919, -0.508, 3.117722) 
ops.node(280, 41.2919, -0.508, 3.219333) 
ops.node(281, 41.2919, -0.508, 3.016111) 
ops.node(282, 41.5967, -0.508, 3.117722) 
ops.node(283, 41.4951, -0.508, 3.117722) 
ops.node(284, 41.5967, -0.508, 3.219333) 
ops.node(285, 41.4951, -0.508, 3.219333) 
ops.node(286, 41.5967, -0.508, 3.016111) 
ops.node(287, 41.4951, -0.508, 3.016111) 
ops.node(288, 41.2919, -0.508, 3.524167) 
ops.node(289, 41.3935, -0.508, 3.524167) 
ops.node(290, 41.4951, -0.508, 3.524167) 
ops.node(291, 41.5967, -0.508, 3.524167) 
ops.node(292, 41.3935, -0.508, 3.422556) 
ops.node(293, 41.2919, -0.508, 3.422556) 
ops.node(294, 41.4951, -0.508, 3.422556) 
ops.node(295, 41.5967, -0.508, 3.422556) 
ops.node(296, 41.3935, -0.508, 3.727389) 
ops.node(297, 41.3935, -0.508, 3.625778) 
ops.node(298, 41.2919, -0.508, 3.727389) 
ops.node(299, 41.2919, -0.508, 3.625778) 
ops.node(300, 41.5967, -0.508, 3.727389) 
ops.node(301, 41.4951, -0.508, 3.727389) 
ops.node(302, 41.5967, -0.508, 3.625778) 
ops.node(303, 41.4951, -0.508, 3.625778) 
ops.node(304, 40.7839, -0.508, 3.320944) 
ops.node(305, 40.8855, -0.508, 3.320944) 
ops.node(306, 40.9871, -0.508, 3.320944) 
ops.node(307, 41.0887, -0.508, 3.320944) 
ops.node(308, 40.8855, -0.508, 3.219333) 
ops.node(309, 40.8855, -0.508, 3.117722) 
ops.node(310, 40.8855, -0.508, 3.016111) 
ops.node(311, 40.7839, -0.508, 3.117722) 
ops.node(312, 40.7839, -0.508, 3.219333) 
ops.node(313, 40.7839, -0.508, 3.016111) 
ops.node(314, 41.0887, -0.508, 3.117722) 
ops.node(315, 40.9871, -0.508, 3.117722) 
ops.node(316, 41.0887, -0.508, 3.219333) 
ops.node(317, 40.9871, -0.508, 3.219333) 
ops.node(318, 41.0887, -0.508, 3.016111) 
ops.node(319, 40.9871, -0.508, 3.016111) 
ops.node(320, 40.7839, -0.508, 3.524167) 
ops.node(321, 40.8855, -0.508, 3.524167) 
ops.node(322, 40.9871, -0.508, 3.524167) 
ops.node(323, 41.0887, -0.508, 3.524167) 
ops.node(324, 40.8855, -0.508, 3.422556) 
ops.node(325, 40.7839, -0.508, 3.422556) 
ops.node(326, 40.9871, -0.508, 3.422556) 
ops.node(327, 41.0887, -0.508, 3.422556) 
ops.node(328, 40.8855, -0.508, 3.727389) 
ops.node(329, 40.8855, -0.508, 3.625778) 
ops.node(330, 40.7839, -0.508, 3.727389) 
ops.node(331, 40.7839, -0.508, 3.625778) 
ops.node(332, 41.0887, -0.508, 3.727389) 
ops.node(333, 40.9871, -0.508, 3.727389) 
ops.node(334, 41.0887, -0.508, 3.625778) 
ops.node(335, 40.9871, -0.508, 3.625778) 
ops.node(336, 41.1903, -0.508, 2.101611) 
ops.node(337, 41.1903, -0.508, 2.203222) 
ops.node(338, 41.1903, -0.508, 2.304833) 
ops.node(339, 41.1903, -0.508, 2.406444) 
ops.node(340, 41.1903, -0.508, 2.508056) 
ops.node(341, 41.1903, -0.508, 2.609667) 
ops.node(342, 41.1903, -0.508, 2.711278) 
ops.node(343, 41.1903, -0.508, 2.812889) 
ops.node(344, 41.2919, -0.508, 2.406444) 
ops.node(345, 41.3935, -0.508, 2.406444) 
ops.node(346, 41.4951, -0.508, 2.406444) 
ops.node(347, 41.5967, -0.508, 2.406444)
 
ops.node(348, 41.3935, -0.508, 2.304833) 
ops.node(349, 41.3935, -0.508, 2.203222) 
ops.node(350, 41.3935, -0.508, 2.101611) 
ops.node(351, 41.2919, -0.508, 2.203222) 
ops.node(352, 41.2919, -0.508, 2.304833) 
ops.node(353, 41.2919, -0.508, 2.101611) 
ops.node(354, 41.5967, -0.508, 2.203222) 
ops.node(355, 41.4951, -0.508, 2.203222) 
ops.node(356, 41.5967, -0.508, 2.304833) 
ops.node(357, 41.4951, -0.508, 2.304833) 
ops.node(358, 41.5967, -0.508, 2.101611) 
ops.node(359, 41.4951, -0.508, 2.101611) 
ops.node(360, 41.2919, -0.508, 2.609667) 
ops.node(361, 41.3935, -0.508, 2.609667) 
ops.node(362, 41.4951, -0.508, 2.609667) 
ops.node(363, 41.5967, -0.508, 2.609667) 
ops.node(364, 41.3935, -0.508, 2.508056) 
ops.node(365, 41.2919, -0.508, 2.508056) 
ops.node(366, 41.4951, -0.508, 2.508056) 
ops.node(367, 41.5967, -0.508, 2.508056) 
ops.node(368, 41.3935, -0.508, 2.812889) 
ops.node(369, 41.3935, -0.508, 2.711278) 
ops.node(370, 41.2919, -0.508, 2.812889) 
ops.node(371, 41.2919, -0.508, 2.711278) 
ops.node(372, 41.5967, -0.508, 2.812889) 
ops.node(373, 41.4951, -0.508, 2.812889) 
ops.node(374, 41.5967, -0.508, 2.711278) 
ops.node(375, 41.4951, -0.508, 2.711278) 
ops.node(376, 40.7839, -0.508, 2.406444) 
ops.node(377, 40.8855, -0.508, 2.406444) 
ops.node(378, 40.9871, -0.508, 2.406444) 
ops.node(379, 41.0887, -0.508, 2.406444) 
ops.node(380, 40.8855, -0.508, 2.304833) 
ops.node(381, 40.8855, -0.508, 2.203222) 
ops.node(382, 40.8855, -0.508, 2.101611) 
ops.node(383, 40.7839, -0.508, 2.203222) 
ops.node(384, 40.7839, -0.508, 2.304833) 
ops.node(385, 40.7839, -0.508, 2.101611) 
ops.node(386, 41.0887, -0.508, 2.203222) 
ops.node(387, 40.9871, -0.508, 2.203222) 
ops.node(388, 41.0887, -0.508, 2.304833) 
ops.node(389, 40.9871, -0.508, 2.304833) 
ops.node(390, 41.0887, -0.508, 2.101611) 
ops.node(391, 40.9871, -0.508, 2.101611) 
ops.node(392, 40.7839, -0.508, 2.609667) 
ops.node(393, 40.8855, -0.508, 2.609667) 
ops.node(394, 40.9871, -0.508, 2.609667) 
ops.node(395, 41.0887, -0.508, 2.609667) 
ops.node(396, 40.8855, -0.508, 2.508056) 
ops.node(397, 40.7839, -0.508, 2.508056) 
ops.node(398, 40.9871, -0.508, 2.508056) 
ops.node(399, 41.0887, -0.508, 2.508056) 
ops.node(400, 40.8855, -0.508, 2.812889) 
ops.node(401, 40.8855, -0.508, 2.711278) 
ops.node(402, 40.7839, -0.508, 2.812889) 
ops.node(403, 40.7839, -0.508, 2.711278) 
ops.node(404, 41.0887, -0.508, 2.812889) 
ops.node(405, 40.9871, -0.508, 2.812889) 
ops.node(406, 41.0887, -0.508, 2.711278) 
ops.node(407, 40.9871, -0.508, 2.711278) 
ops.node(408, 41.6983, -0.4064, 2.0) 
ops.node(409, 41.6983, -0.3048, 2.0) 
ops.node(410, 41.6983, -0.2032, 2.0) 
ops.node(411, 41.6983, -0.1016, 2.0) 
ops.node(412, 41.6983, 0.0, 2.0) 
ops.node(413, 41.6983, 0.1016, 2.0) 
ops.node(414, 41.6983, 0.2032, 2.0) 
ops.node(415, 41.6983, 0.3048, 2.0) 
ops.node(416, 41.6983, 0.4064, 2.0) 
ops.node(417, 41.6983, 0.508, 2.0) 
ops.node(418, 41.5967, 0.508, 2.0) 
ops.node(419, 41.4951, 0.508, 2.0) 
ops.node(420, 41.3935, 0.508, 2.0) 
ops.node(421, 41.2919, 0.508, 2.0) 
ops.node(422, 41.1903, 0.508, 2.0) 
ops.node(423, 41.0887, 0.508, 2.0) 
ops.node(424, 40.9871, 0.508, 2.0) 
ops.node(425, 40.8855, 0.508, 2.0) 
ops.node(426, 40.7839, 0.508, 2.0) 
ops.node(427, 41.5967, 0.0, 2.0) 
ops.node(428, 41.4951, 0.0, 2.0) 
ops.node(429, 41.3935, 0.0, 2.0) 
ops.node(430, 41.2919, 0.0, 2.0) 
ops.node(431, 41.1903, 0.0, 2.0) 
ops.node(432, 41.0887, 0.0, 2.0) 
ops.node(433, 40.9871, 0.0, 2.0) 
ops.node(434, 40.8855, 0.0, 2.0) 
ops.node(435, 40.7839, 0.0, 2.0) 
ops.node(436, 41.1903, -0.1016, 2.0) 
ops.node(437, 41.1903, -0.2032, 2.0) 
ops.node(438, 41.1903, -0.3048, 2.0) 
ops.node(439, 41.1903, -0.4064, 2.0) 
ops.node(440, 41.2919, -0.2032, 2.0) 
ops.node(441, 41.3935, -0.2032, 2.0) 
ops.node(442, 41.4951, -0.2032, 2.0) 
ops.node(443, 41.5967, -0.2032, 2.0) 
ops.node(444, 41.3935, -0.1016, 2.0) 
ops.node(445, 41.2919, -0.1016, 2.0) 
ops.node(446, 41.4951, -0.1016, 2.0) 
ops.node(447, 41.5967, -0.1016, 2.0) 
ops.node(448, 41.3935, -0.4064, 2.0) 
ops.node(449, 41.3935, -0.3048, 2.0) 
ops.node(450, 41.2919, -0.4064, 2.0) 
ops.node(451, 41.2919, -0.3048, 2.0) 
ops.node(452, 41.4951, -0.4064, 2.0) 
ops.node(453, 41.4951, -0.3048, 2.0) 
ops.node(454, 41.5967, -0.4064, 2.0) 
ops.node(455, 41.5967, -0.3048, 2.0) 
ops.node(456, 40.7839, -0.2032, 2.0) 
ops.node(457, 40.8855, -0.2032, 2.0) 
ops.node(458, 40.9871, -0.2032, 2.0) 
ops.node(459, 41.0887, -0.2032, 2.0) 
ops.node(460, 40.8855, -0.1016, 2.0) 
ops.node(461, 40.7839, -0.1016, 2.0) 
ops.node(462, 40.9871, -0.1016, 2.0) 
ops.node(463, 41.0887, -0.1016, 2.0) 
ops.node(464, 40.8855, -0.4064, 2.0) 
ops.node(465, 40.8855, -0.3048, 2.0) 
ops.node(466, 40.7839, -0.4064, 2.0) 
ops.node(467, 40.7839, -0.3048, 2.0) 
ops.node(468, 40.9871, -0.4064, 2.0) 
ops.node(469, 40.9871, -0.3048, 2.0) 
ops.node(470, 41.0887, -0.4064, 2.0) 
ops.node(471, 41.0887, -0.3048, 2.0) 
ops.node(472, 41.1903, 0.4064, 2.0) 
ops.node(473, 41.1903, 0.3048, 2.0) 
ops.node(474, 41.1903, 0.2032, 2.0) 
ops.node(475, 41.1903, 0.1016, 2.0) 
ops.node(476, 41.2919, 0.3048, 2.0) 
ops.node(477, 41.3935, 0.3048, 2.0) 
ops.node(478, 41.4951, 0.3048, 2.0) 
ops.node(479, 41.5967, 0.3048, 2.0) 
ops.node(480, 41.3935, 0.4064, 2.0) 
ops.node(481, 41.2919, 0.4064, 2.0) 
ops.node(482, 41.4951, 0.4064, 2.0) 
ops.node(483, 41.5967, 0.4064, 2.0) 
ops.node(484, 41.3935, 0.1016, 2.0) 
ops.node(485, 41.3935, 0.2032, 2.0) 
ops.node(486, 41.2919, 0.1016, 2.0) 
ops.node(487, 41.2919, 0.2032, 2.0) 
ops.node(488, 41.5967, 0.1016, 2.0) 
ops.node(489, 41.4951, 0.1016, 2.0) 
ops.node(490, 41.5967, 0.2032, 2.0) 
ops.node(491, 41.4951, 0.2032, 2.0) 
ops.node(492, 40.7839, 0.3048, 2.0) 
ops.node(493, 40.8855, 0.3048, 2.0) 
ops.node(494, 40.9871, 0.3048, 2.0) 
ops.node(495, 41.0887, 0.3048, 2.0) 
ops.node(496, 40.8855, 0.4064, 2.0) 
ops.node(497, 40.7839, 0.4064, 2.0) 
ops.node(498, 40.9871, 0.4064, 2.0) 
ops.node(499, 41.0887, 0.4064, 2.0) 
ops.node(500, 40.8855, 0.1016, 2.0) 
ops.node(501, 40.8855, 0.2032, 2.0) 
ops.node(502, 40.7839, 0.1016, 2.0) 
ops.node(503, 40.7839, 0.2032, 2.0) 
ops.node(504, 40.9871, 0.1016, 2.0) 
ops.node(505, 40.9871, 0.2032, 2.0) 
ops.node(506, 41.0887, 0.1016, 2.0) 
ops.node(507, 41.0887, 0.2032, 2.0) 
ops.node(508, 41.6983, 0.508, 2.101611) 
ops.node(509, 41.6983, 0.508, 2.203222) 
ops.node(510, 41.6983, 0.508, 2.304833) 
ops.node(511, 41.6983, 0.508, 2.406444) 
ops.node(512, 41.6983, 0.508, 2.508056) 
ops.node(513, 41.6983, 0.508, 2.609667) 
ops.node(514, 41.6983, 0.508, 2.711278) 
ops.node(515, 41.6983, 0.508, 2.812889) 
ops.node(516, 41.6983, 0.508, 2.9145) 
ops.node(517, 41.6983, 0.508, 3.016111) 
ops.node(518, 41.6983, 0.508, 3.117722) 
ops.node(519, 41.6983, 0.508, 3.219333) 
ops.node(520, 41.6983, 0.508, 3.320944) 
ops.node(521, 41.6983, 0.508, 3.422556) 
ops.node(522, 41.6983, 0.508, 3.524167) 
ops.node(523, 41.6983, 0.508, 3.625778) 
ops.node(524, 41.6983, 0.508, 3.727389) 
ops.node(525, 41.6983, 0.508, 3.829) 
ops.node(526, 41.5967, 0.508, 3.829) 
ops.node(527, 41.4951, 0.508, 3.829) 
ops.node(528, 41.3935, 0.508, 3.829) 
ops.node(529, 41.2919, 0.508, 3.829) 
ops.node(530, 41.1903, 0.508, 3.829) 
ops.node(531, 41.0887, 0.508, 3.829) 
ops.node(532, 40.9871, 0.508, 3.829) 
ops.node(533, 40.8855, 0.508, 3.829) 
ops.node(534, 40.7839, 0.508, 3.829) 
ops.node(535, 41.5967, 0.508, 2.9145) 
ops.node(536, 41.4951, 0.508, 2.9145) 
ops.node(537, 41.3935, 0.508, 2.9145) 
ops.node(538, 41.2919, 0.508, 2.9145) 
ops.node(539, 41.1903, 0.508, 2.9145) 
ops.node(540, 41.0887, 0.508, 2.9145) 
ops.node(541, 40.9871, 0.508, 2.9145) 
ops.node(542, 40.8855, 0.508, 2.9145) 
ops.node(543, 40.7839, 0.508, 2.9145) 
ops.node(544, 41.1903, 0.508, 2.812889) 
ops.node(545, 41.1903, 0.508, 2.711278) 
ops.node(546, 41.1903, 0.508, 2.609667) 
ops.node(547, 41.1903, 0.508, 2.508056) 
ops.node(548, 41.1903, 0.508, 2.406444) 
ops.node(549, 41.1903, 0.508, 2.304833) 
ops.node(550, 41.1903, 0.508, 2.203222) 
ops.node(551, 41.1903, 0.508, 2.101611) 
ops.node(552, 41.2919, 0.508, 2.508056) 
ops.node(553, 41.3935, 0.508, 2.508056) 
ops.node(554, 41.4951, 0.508, 2.508056) 
ops.node(555, 41.5967, 0.508, 2.508056) 
ops.node(556, 41.3935, 0.508, 2.609667) 
ops.node(557, 41.3935, 0.508, 2.711278) 
ops.node(558, 41.3935, 0.508, 2.812889) 
ops.node(559, 41.2919, 0.508, 2.711278) 
ops.node(560, 41.2919, 0.508, 2.609667) 
ops.node(561, 41.2919, 0.508, 2.812889) 
ops.node(562, 41.5967, 0.508, 2.711278) 
ops.node(563, 41.4951, 0.508, 2.711278) 
ops.node(564, 41.5967, 0.508, 2.609667) 
ops.node(565, 41.4951, 0.508, 2.609667) 
ops.node(566, 41.5967, 0.508, 2.812889) 
ops.node(567, 41.4951, 0.508, 2.812889) 
ops.node(568, 41.2919, 0.508, 2.304833) 
ops.node(569, 41.3935, 0.508, 2.304833) 
ops.node(570, 41.4951, 0.508, 2.304833) 
ops.node(571, 41.5967, 0.508, 2.304833) 
ops.node(572, 41.3935, 0.508, 2.406444) 
ops.node(573, 41.2919, 0.508, 2.406444) 
ops.node(574, 41.4951, 0.508, 2.406444) 
ops.node(575, 41.5967, 0.508, 2.406444) 
ops.node(576, 41.3935, 0.508, 2.101611) 
ops.node(577, 41.3935, 0.508, 2.203222) 
ops.node(578, 41.2919, 0.508, 2.101611) 
ops.node(579, 41.2919, 0.508, 2.203222) 
ops.node(580, 41.5967, 0.508, 2.101611) 
ops.node(581, 41.4951, 0.508, 2.101611) 
ops.node(582, 41.5967, 0.508, 2.203222) 
ops.node(583, 41.4951, 0.508, 2.203222) 
ops.node(584, 40.7839, 0.508, 2.508056) 
ops.node(585, 40.8855, 0.508, 2.508056) 
ops.node(586, 40.9871, 0.508, 2.508056) 
ops.node(587, 41.0887, 0.508, 2.508056) 
ops.node(588, 40.8855, 0.508, 2.609667) 
ops.node(589, 40.8855, 0.508, 2.711278) 
ops.node(590, 40.8855, 0.508, 2.812889) 
ops.node(591, 40.7839, 0.508, 2.711278) 
ops.node(592, 40.7839, 0.508, 2.609667) 
ops.node(593, 40.7839, 0.508, 2.812889) 
ops.node(594, 41.0887, 0.508, 2.711278) 
ops.node(595, 40.9871, 0.508, 2.711278) 
ops.node(596, 41.0887, 0.508, 2.609667) 
ops.node(597, 40.9871, 0.508, 2.609667) 
ops.node(598, 41.0887, 0.508, 2.812889) 
ops.node(599, 40.9871, 0.508, 2.812889) 
ops.node(600, 40.7839, 0.508, 2.304833) 
ops.node(601, 40.8855, 0.508, 2.304833) 
ops.node(602, 40.9871, 0.508, 2.304833) 
ops.node(603, 41.0887, 0.508, 2.304833) 
ops.node(604, 40.8855, 0.508, 2.406444) 
ops.node(605, 40.7839, 0.508, 2.406444) 
ops.node(606, 40.9871, 0.508, 2.406444) 
ops.node(607, 41.0887, 0.508, 2.406444) 
ops.node(608, 40.8855, 0.508, 2.101611) 
ops.node(609, 40.8855, 0.508, 2.203222) 
ops.node(610, 40.7839, 0.508, 2.101611) 
ops.node(611, 40.7839, 0.508, 2.203222) 
ops.node(612, 41.0887, 0.508, 2.101611) 
ops.node(613, 40.9871, 0.508, 2.101611) 
ops.node(614, 41.0887, 0.508, 2.203222) 
ops.node(615, 40.9871, 0.508, 2.203222) 
ops.node(616, 41.1903, 0.508, 3.727389) 
ops.node(617, 41.1903, 0.508, 3.625778) 
ops.node(618, 41.1903, 0.508, 3.524167) 
ops.node(619, 41.1903, 0.508, 3.422556) 
ops.node(620, 41.1903, 0.508, 3.320944) 
ops.node(621, 41.1903, 0.508, 3.219333) 
ops.node(622, 41.1903, 0.508, 3.117722) 
ops.node(623, 41.1903, 0.508, 3.016111) 
ops.node(624, 41.2919, 0.508, 3.422556) 
ops.node(625, 41.3935, 0.508, 3.422556) 
ops.node(626, 41.4951, 0.508, 3.422556) 
ops.node(627, 41.5967, 0.508, 3.422556) 
ops.node(628, 41.3935, 0.508, 3.524167) 
ops.node(629, 41.3935, 0.508, 3.625778) 
ops.node(630, 41.3935, 0.508, 3.727389) 
ops.node(631, 41.2919, 0.508, 3.625778) 
ops.node(632, 41.2919, 0.508, 3.524167) 
ops.node(633, 41.2919, 0.508, 3.727389) 
ops.node(634, 41.5967, 0.508, 3.625778) 
ops.node(635, 41.4951, 0.508, 3.625778) 
ops.node(636, 41.5967, 0.508, 3.524167) 
ops.node(637, 41.4951, 0.508, 3.524167) 
ops.node(638, 41.5967, 0.508, 3.727389) 
ops.node(639, 41.4951, 0.508, 3.727389) 
ops.node(640, 41.2919, 0.508, 3.219333) 
ops.node(641, 41.3935, 0.508, 3.219333) 
ops.node(642, 41.4951, 0.508, 3.219333) 
ops.node(643, 41.5967, 0.508, 3.219333) 
ops.node(644, 41.3935, 0.508, 3.320944) 
ops.node(645, 41.2919, 0.508, 3.320944) 
ops.node(646, 41.4951, 0.508, 3.320944) 
ops.node(647, 41.5967, 0.508, 3.320944) 
ops.node(648, 41.3935, 0.508, 3.016111) 
ops.node(649, 41.3935, 0.508, 3.117722) 
ops.node(650, 41.2919, 0.508, 3.016111) 
ops.node(651, 41.2919, 0.508, 3.117722) 
ops.node(652, 41.5967, 0.508, 3.016111) 
ops.node(653, 41.4951, 0.508, 3.016111) 
ops.node(654, 41.5967, 0.508, 3.117722) 
ops.node(655, 41.4951, 0.508, 3.117722) 
ops.node(656, 40.7839, 0.508, 3.422556) 
ops.node(657, 40.8855, 0.508, 3.422556) 
ops.node(658, 40.9871, 0.508, 3.422556) 
ops.node(659, 41.0887, 0.508, 3.422556) 
ops.node(660, 40.8855, 0.508, 3.524167) 
ops.node(661, 40.8855, 0.508, 3.625778) 
ops.node(662, 40.8855, 0.508, 3.727389) 
ops.node(663, 40.7839, 0.508, 3.625778) 
ops.node(664, 40.7839, 0.508, 3.524167) 
ops.node(665, 40.7839, 0.508, 3.727389) 
ops.node(666, 41.0887, 0.508, 3.625778) 
ops.node(667, 40.9871, 0.508, 3.625778) 
ops.node(668, 41.0887, 0.508, 3.524167) 
ops.node(669, 40.9871, 0.508, 3.524167) 
ops.node(670, 41.0887, 0.508, 3.727389) 
ops.node(671, 40.9871, 0.508, 3.727389) 
ops.node(672, 40.7839, 0.508, 3.219333) 
ops.node(673, 40.8855, 0.508, 3.219333) 
ops.node(674, 40.9871, 0.508, 3.219333) 
ops.node(675, 41.0887, 0.508, 3.219333) 
ops.node(676, 40.8855, 0.508, 3.320944) 
ops.node(677, 40.7839, 0.508, 3.320944) 
ops.node(678, 40.9871, 0.508, 3.320944) 
ops.node(679, 41.0887, 0.508, 3.320944) 
ops.node(680, 40.8855, 0.508, 3.016111) 
ops.node(681, 40.8855, 0.508, 3.117722) 
ops.node(682, 40.7839, 0.508, 3.016111) 
ops.node(683, 40.7839, 0.508, 3.117722) 
ops.node(684, 41.0887, 0.508, 3.016111) 
ops.node(685, 40.9871, 0.508, 3.016111) 
ops.node(686, 41.0887, 0.508, 3.117722) 
ops.node(687, 40.9871, 0.508, 3.117722) 
ops.node(688, 41.6983, -0.4064, 3.829) 
ops.node(689, 41.6983, -0.3048, 3.829) 
ops.node(690, 41.6983, -0.2032, 3.829) 
ops.node(691, 41.6983, -0.1016, 3.829) 
ops.node(692, 41.6983, 0.0, 3.829) 
ops.node(693, 41.6983, 0.1016, 3.829) 
ops.node(694, 41.6983, 0.2032, 3.829) 
ops.node(695, 41.6983, 0.3048, 3.829) 
ops.node(696, 41.6983, 0.4064, 3.829) 
ops.node(697, 41.6983, -0.4064, 2.9145) 
ops.node(698, 41.6983, -0.3048, 2.9145) 
ops.node(699, 41.6983, -0.2032, 2.9145) 
ops.node(700, 41.6983, -0.1016, 2.9145) 
ops.node(701, 41.6983, 0.0, 2.9145) 
ops.node(702, 41.6983, 0.1016, 2.9145) 
ops.node(703, 41.6983, 0.2032, 2.9145) 
ops.node(704, 41.6983, 0.3048, 2.9145) 
ops.node(705, 41.6983, 0.4064, 2.9145) 
ops.node(706, 41.6983, 0.0, 2.812889) 
ops.node(707, 41.6983, 0.0, 2.711278) 
ops.node(708, 41.6983, 0.0, 2.609667) 
ops.node(709, 41.6983, 0.0, 2.508056) 
ops.node(710, 41.6983, 0.0, 2.406444) 
ops.node(711, 41.6983, 0.0, 2.304833) 
ops.node(712, 41.6983, 0.0, 2.203222) 
ops.node(713, 41.6983, 0.0, 2.101611) 
ops.node(714, 41.6983, -0.1016, 2.508056) 
ops.node(715, 41.6983, -0.2032, 2.508056) 
ops.node(716, 41.6983, -0.3048, 2.508056) 
ops.node(717, 41.6983, -0.4064, 2.508056) 
ops.node(718, 41.6983, -0.2032, 2.609667) 
ops.node(719, 41.6983, -0.2032, 2.711278) 
ops.node(720, 41.6983, -0.2032, 2.812889) 
ops.node(721, 41.6983, -0.1016, 2.711278) 
ops.node(722, 41.6983, -0.1016, 2.609667) 
ops.node(723, 41.6983, -0.1016, 2.812889) 
ops.node(724, 41.6983, -0.4064, 2.711278) 
ops.node(725, 41.6983, -0.3048, 2.711278) 
ops.node(726, 41.6983, -0.4064, 2.609667) 
ops.node(727, 41.6983, -0.3048, 2.609667) 
ops.node(728, 41.6983, -0.4064, 2.812889) 
ops.node(729, 41.6983, -0.3048, 2.812889) 
ops.node(730, 41.6983, -0.1016, 2.304833) 
ops.node(731, 41.6983, -0.2032, 2.304833) 
ops.node(732, 41.6983, -0.3048, 2.304833) 
ops.node(733, 41.6983, -0.4064, 2.304833) 
ops.node(734, 41.6983, -0.2032, 2.406444) 
ops.node(735, 41.6983, -0.1016, 2.406444) 
ops.node(736, 41.6983, -0.3048, 2.406444) 
ops.node(737, 41.6983, -0.4064, 2.406444) 
ops.node(738, 41.6983, -0.2032, 2.101611) 
ops.node(739, 41.6983, -0.2032, 2.203222) 
ops.node(740, 41.6983, -0.1016, 2.101611) 
ops.node(741, 41.6983, -0.1016, 2.203222) 
ops.node(742, 41.6983, -0.4064, 2.101611) 
ops.node(743, 41.6983, -0.3048, 2.101611) 
ops.node(744, 41.6983, -0.4064, 2.203222) 
ops.node(745, 41.6983, -0.3048, 2.203222) 
ops.node(746, 41.6983, 0.4064, 2.508056) 
ops.node(747, 41.6983, 0.3048, 2.508056) 
ops.node(748, 41.6983, 0.2032, 2.508056) 
ops.node(749, 41.6983, 0.1016, 2.508056) 
ops.node(750, 41.6983, 0.3048, 2.609667) 
ops.node(751, 41.6983, 0.3048, 2.711278) 
ops.node(752, 41.6983, 0.3048, 2.812889) 
ops.node(753, 41.6983, 0.4064, 2.711278) 
ops.node(754, 41.6983, 0.4064, 2.609667) 
ops.node(755, 41.6983, 0.4064, 2.812889) 
ops.node(756, 41.6983, 0.1016, 2.711278) 
ops.node(757, 41.6983, 0.2032, 2.711278) 
ops.node(758, 41.6983, 0.1016, 2.609667) 
ops.node(759, 41.6983, 0.2032, 2.609667) 
ops.node(760, 41.6983, 0.1016, 2.812889) 
ops.node(761, 41.6983, 0.2032, 2.812889) 
ops.node(762, 41.6983, 0.4064, 2.304833) 
ops.node(763, 41.6983, 0.3048, 2.304833) 
ops.node(764, 41.6983, 0.2032, 2.304833) 
ops.node(765, 41.6983, 0.1016, 2.304833) 
ops.node(766, 41.6983, 0.3048, 2.406444) 
ops.node(767, 41.6983, 0.4064, 2.406444) 
ops.node(768, 41.6983, 0.2032, 2.406444) 
ops.node(769, 41.6983, 0.1016, 2.406444) 
ops.node(770, 41.6983, 0.3048, 2.101611) 
ops.node(771, 41.6983, 0.3048, 2.203222) 
ops.node(772, 41.6983, 0.4064, 2.101611) 
ops.node(773, 41.6983, 0.4064, 2.203222) 
ops.node(774, 41.6983, 0.1016, 2.101611) 
ops.node(775, 41.6983, 0.2032, 2.101611) 
ops.node(776, 41.6983, 0.1016, 2.203222) 
ops.node(777, 41.6983, 0.2032, 2.203222) 
ops.node(778, 41.6983, 0.0, 3.727389) 
ops.node(779, 41.6983, 0.0, 3.625778) 
ops.node(780, 41.6983, 0.0, 3.524167) 
ops.node(781, 41.6983, 0.0, 3.422556) 
ops.node(782, 41.6983, 0.0, 3.320944) 
ops.node(783, 41.6983, 0.0, 3.219333) 
ops.node(784, 41.6983, 0.0, 3.117722) 
ops.node(785, 41.6983, 0.0, 3.016111) 
ops.node(786, 41.6983, -0.1016, 3.422556) 
ops.node(787, 41.6983, -0.2032, 3.422556) 
ops.node(788, 41.6983, -0.3048, 3.422556) 
ops.node(789, 41.6983, -0.4064, 3.422556) 
ops.node(790, 41.6983, -0.2032, 3.524167) 
ops.node(791, 41.6983, -0.2032, 3.625778) 
ops.node(792, 41.6983, -0.2032, 3.727389) 
ops.node(793, 41.6983, -0.1016, 3.625778) 
ops.node(794, 41.6983, -0.1016, 3.524167) 
ops.node(795, 41.6983, -0.1016, 3.727389) 
ops.node(796, 41.6983, -0.4064, 3.625778) 
ops.node(797, 41.6983, -0.3048, 3.625778) 
ops.node(798, 41.6983, -0.4064, 3.524167) 
ops.node(799, 41.6983, -0.3048, 3.524167) 
ops.node(800, 41.6983, -0.4064, 3.727389) 
ops.node(801, 41.6983, -0.3048, 3.727389) 
ops.node(802, 41.6983, -0.1016, 3.219333) 
ops.node(803, 41.6983, -0.2032, 3.219333) 
ops.node(804, 41.6983, -0.3048, 3.219333) 
ops.node(805, 41.6983, -0.4064, 3.219333) 
ops.node(806, 41.6983, -0.2032, 3.320944) 
ops.node(807, 41.6983, -0.1016, 3.320944) 
ops.node(808, 41.6983, -0.3048, 3.320944) 
ops.node(809, 41.6983, -0.4064, 3.320944) 
ops.node(810, 41.6983, -0.2032, 3.016111) 
ops.node(811, 41.6983, -0.2032, 3.117722) 
ops.node(812, 41.6983, -0.1016, 3.016111) 
ops.node(813, 41.6983, -0.1016, 3.117722) 
ops.node(814, 41.6983, -0.4064, 3.016111) 
ops.node(815, 41.6983, -0.3048, 3.016111) 
ops.node(816, 41.6983, -0.4064, 3.117722) 
ops.node(817, 41.6983, -0.3048, 3.117722) 
ops.node(818, 41.6983, 0.4064, 3.422556) 
ops.node(819, 41.6983, 0.3048, 3.422556) 
ops.node(820, 41.6983, 0.2032, 3.422556) 
ops.node(821, 41.6983, 0.1016, 3.422556) 
ops.node(822, 41.6983, 0.3048, 3.524167) 
ops.node(823, 41.6983, 0.3048, 3.625778) 
ops.node(824, 41.6983, 0.3048, 3.727389) 
ops.node(825, 41.6983, 0.4064, 3.625778) 
ops.node(826, 41.6983, 0.4064, 3.524167) 
ops.node(827, 41.6983, 0.4064, 3.727389) 
ops.node(828, 41.6983, 0.1016, 3.625778) 
ops.node(829, 41.6983, 0.2032, 3.625778) 
ops.node(830, 41.6983, 0.1016, 3.524167) 
ops.node(831, 41.6983, 0.2032, 3.524167) 
ops.node(832, 41.6983, 0.1016, 3.727389) 
ops.node(833, 41.6983, 0.2032, 3.727389) 
ops.node(834, 41.6983, 0.4064, 3.219333) 
ops.node(835, 41.6983, 0.3048, 3.219333) 
ops.node(836, 41.6983, 0.2032, 3.219333) 
ops.node(837, 41.6983, 0.1016, 3.219333) 
ops.node(838, 41.6983, 0.3048, 3.320944) 
ops.node(839, 41.6983, 0.4064, 3.320944) 
ops.node(840, 41.6983, 0.2032, 3.320944) 
ops.node(841, 41.6983, 0.1016, 3.320944) 
ops.node(842, 41.6983, 0.3048, 3.016111) 
ops.node(843, 41.6983, 0.3048, 3.117722) 
ops.node(844, 41.6983, 0.4064, 3.016111) 
ops.node(845, 41.6983, 0.4064, 3.117722) 
ops.node(846, 41.6983, 0.1016, 3.016111) 
ops.node(847, 41.6983, 0.2032, 3.016111) 
ops.node(848, 41.6983, 0.1016, 3.117722) 
ops.node(849, 41.6983, 0.2032, 3.117722) 
nodeconcmass=2400*6*0.1*0.1*0.0254
ops.mass(9,  *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(10, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(11, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(12, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(13, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(14, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(15, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(16, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(17, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(18, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(19, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(20, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(21, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(22, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(23, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(24, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(25, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(26, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(27, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(28, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(29, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(30, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(31, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(32, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(33, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(34, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(35, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(36, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(37, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(38, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(39, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(40, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(41, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(42, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(43, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(44, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(45, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(46, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(47, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(48, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(49, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(50, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(51, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(52, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(53, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(54, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(55, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(56, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(57, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(58, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(59, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(60, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(61, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(62, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(63, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(64, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(65, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(66, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(67, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(68, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(69, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(70, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(71, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(72, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(73, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(74, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(75, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(76, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(77, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(78, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(79, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(80, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(81, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(82, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(83, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(84, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(85, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(86, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(87, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(88, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(89, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(90, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(91, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(92, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(93, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(94, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(95, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(96, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(97, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(98, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(99, *[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(100,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(101,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(102,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(103,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(104,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(105,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(106,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(107,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(108,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(109,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(110,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(111,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(112,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(113,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(114,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(115,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(116,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(117,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(118,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(119,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(120,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(121,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(122,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(123,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(124,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(125,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(126,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(127,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(128,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(129,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(130,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(131,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(132,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(133,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(134,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(135,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(136,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(137,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(138,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(139,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(140,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(141,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(142,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(143,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(144,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(145,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(146,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(147,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(148,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(149,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(150,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(151,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(152,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(153,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(154,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(155,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(156,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(157,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(158,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(159,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(160,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(161,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(162,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(163,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(164,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(165,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(166,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(167,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(168,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(169,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(170,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(171,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(172,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(173,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(174,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(175,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(176,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(177,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(178,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(179,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(180,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(181,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(182,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(183,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(184,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(185,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(186,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(187,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(188,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(189,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(190,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(191,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(192,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(193,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(194,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(195,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(196,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(197,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(198,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(199,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(200,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(201,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(202,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(203,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(204,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(205,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(206,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(207,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(208,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(209,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(210,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(211,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(212,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(213,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(214,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(215,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(216,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(217,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(218,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(219,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(220,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(221,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(222,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(223,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(224,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(225,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(226,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(227,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(228,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(229,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(230,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(231,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(232,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(233,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(234,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(235,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(236,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(237,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(238,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(239,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(240,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(241,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(242,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(243,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(244,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(245,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(246,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(247,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(248,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(249,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(250,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(251,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(252,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(253,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(254,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(255,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(256,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(257,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(258,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(259,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(260,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(261,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(262,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(263,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(264,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(265,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(266,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(267,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(268,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(269,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(270,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(271,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(272,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(273,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(274,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(275,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(276,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(277,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(278,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(279,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(280,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(281,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(282,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(283,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(284,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(285,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(286,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(287,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(288,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(289,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(290,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(291,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(292,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(293,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(294,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(295,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(296,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(297,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(298,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(299,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(300,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(301,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(302,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(303,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(304,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(305,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(306,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(307,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(308,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(309,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(310,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(311,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(312,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(313,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(314,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(315,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(316,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(317,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(318,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(319,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(320,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(321,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(322,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(323,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(324,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(325,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(326,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(327,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(328,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(329,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(330,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(331,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(332,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(333,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(334,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(335,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(336,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(337,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(338,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(339,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(340,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(341,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(342,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(343,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(344,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(345,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(346,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(347,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(348,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(349,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(350,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(351,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(352,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(353,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(354,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(355,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(356,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(357,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(358,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(359,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(360,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(361,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(362,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(363,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(364,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(365,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(366,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(367,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(368,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(369,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(370,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(371,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(372,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(373,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(374,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(375,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(376,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(377,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(378,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(379,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(380,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(381,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(382,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(383,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(384,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(385,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(386,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(387,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(388,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(389,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(390,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(391,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(392,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(393,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(394,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(395,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(396,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(397,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(398,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(399,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(400,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(401,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(402,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(403,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(404,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(405,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(406,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(407,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(408,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(409,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(410,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(411,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(412,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(413,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(414,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(415,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(416,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(417,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(418,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(419,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(420,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(421,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(422,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(423,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(424,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(425,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(426,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(427,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(428,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(429,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(430,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(431,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(432,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(433,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(434,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(435,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(436,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(437,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(438,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(439,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(440,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(441,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(442,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(443,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(444,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(445,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(446,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(447,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(448,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(449,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(450,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(451,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(452,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(453,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(454,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(455,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(456,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(457,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(458,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(459,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(460,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(461,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(462,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(463,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(464,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(465,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(466,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(467,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(468,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(469,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(470,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(471,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(472,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(473,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(474,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(475,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(476,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(477,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(478,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(479,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(480,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(481,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(482,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(483,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(484,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(485,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(486,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(487,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(488,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(489,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(490,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(491,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(492,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(493,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(494,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(495,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(496,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(497,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(498,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(499,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(500,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(501,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(502,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(503,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(504,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(505,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(506,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(507,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(508,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(509,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(510,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(511,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(512,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(513,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(514,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(515,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(516,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(517,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(518,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(519,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(520,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(521,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(522,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(523,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(524,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(525,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(526,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(527,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(528,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(529,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(530,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(531,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(532,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(533,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(534,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(535,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(536,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(537,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(538,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(539,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(540,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(541,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(542,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(543,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(544,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(545,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(546,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(547,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(548,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(549,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(550,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(551,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(552,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(553,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(554,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(555,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(556,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(557,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(558,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(559,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(560,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(561,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(562,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(563,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(564,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(565,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(566,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(567,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(568,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(569,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(570,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(571,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(572,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(573,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(574,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(575,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(576,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(577,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(578,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(579,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(580,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(581,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(582,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(583,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(584,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(585,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(586,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(587,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(588,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(589,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(590,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(591,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(592,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(593,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(594,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(595,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(596,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(597,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(598,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(599,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(600,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(601,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(602,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(603,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(604,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(605,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(606,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(607,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(608,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(609,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(610,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(611,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(612,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(613,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(614,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(615,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(616,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(617,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(618,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(619,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(620,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(621,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(622,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(623,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(624,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(625,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(626,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(627,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(628,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(629,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(630,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(631,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(632,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(633,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(634,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(635,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(636,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(637,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(638,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(639,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(640,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(641,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(642,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(643,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(644,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(645,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(646,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(647,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(648,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(649,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(650,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(651,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(652,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(653,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(654,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(655,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(656,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(657,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(658,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(659,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(660,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(661,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(662,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(663,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(664,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(665,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(666,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(667,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(668,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(669,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(670,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(671,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(672,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(673,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(674,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(675,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(676,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(677,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(678,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(679,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(680,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(681,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(682,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(683,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(684,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(685,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(686,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(687,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(688,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(689,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(690,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(691,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(692,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(693,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(694,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(695,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(696,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(697,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(698,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(699,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(700,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(701,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(702,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(703,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(704,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(705,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(706,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(707,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(708,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(709,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(710,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(711,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(712,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(713,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(714,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(715,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(716,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(717,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(718,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(719,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(720,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(721,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(722,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(723,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(724,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(725,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(726,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(727,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(728,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(729,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(730,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(731,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(732,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(733,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(734,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(735,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(736,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(737,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(738,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(739,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(740,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(741,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(742,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(743,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(744,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(745,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(746,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(747,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(748,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(749,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(750,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(751,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(752,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(753,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(754,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(755,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(756,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(757,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(758,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(759,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(760,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(761,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(762,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(763,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(764,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(765,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(766,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(767,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(768,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(769,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(770,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(771,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(772,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(773,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(774,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(775,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(776,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(777,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(778,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(779,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(780,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(781,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(782,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(783,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(784,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(785,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(786,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(787,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(788,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(789,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(790,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(791,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(792,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(793,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(794,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(795,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(796,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(797,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(798,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(799,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(800,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(801,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(802,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(803,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(804,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(805,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(806,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(807,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(808,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(809,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(810,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(811,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(812,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(813,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(814,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(815,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(816,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(817,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0])
ops.mass(818,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(819,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(820,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(821,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(822,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(823,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(824,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(825,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(826,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(827,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(828,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(829,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(830,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(831,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(832,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(833,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(834,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(835,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(836,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(837,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(838,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(839,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(840,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(841,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(842,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(843,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(844,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(845,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(846,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(847,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(848,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 
ops.mass(849,*[nodeconcmass,nodeconcmass,nodeconcmass,0,0,0]) 

ops.element("ShellMITC4",1,83,86,90,82,100) 
ops.element("ShellMITC4",2,82,90,76,77,100) 
ops.element("ShellMITC4",3,86,87,89,90,100) 
ops.element("ShellMITC4",4,90,89,75,76,100) 
ops.element("ShellMITC4",5,87,88,91,89,100) 
ops.element("ShellMITC4",6,89,91,74,75,100) 
ops.element("ShellMITC4",7,88,67,68,91,100) 
ops.element("ShellMITC4",8,91,68,69,74,100) 
ops.element("ShellMITC4",9,92,94,43,44,100) 
ops.element("ShellMITC4",10,94,85,42,43,100) 
ops.element("ShellMITC4",11,87,86,95,93,100) 
ops.element("ShellMITC4",12,93,95,94,92,100) 
ops.element("ShellMITC4",13,86,83,84,95,100) 
ops.element("ShellMITC4",14,95,84,85,94,100) 
ops.element("ShellMITC4",15,65,96,45,46,100) 
ops.element("ShellMITC4",16,96,92,44,45,100) 
ops.element("ShellMITC4",17,67,88,97,66,100) 
ops.element("ShellMITC4",18,66,97,96,65,100) 
ops.element("ShellMITC4",19,88,87,93,97,100) 
ops.element("ShellMITC4",20,97,93,92,96,100) 
ops.element("ShellMITC4",21,99,102,103,98,100) 
ops.element("ShellMITC4",22,98,103,78,79,100) 
ops.element("ShellMITC4",23,102,83,82,103,100) 
ops.element("ShellMITC4",24,103,82,77,78,100) 
ops.element("ShellMITC4",25,100,104,102,99,100) 
ops.element("ShellMITC4",26,104,84,83,102,100) 
ops.element("ShellMITC4",27,40,41,105,101,100) 
ops.element("ShellMITC4",28,101,105,104,100,100) 
ops.element("ShellMITC4",29,41,42,85,105,100) 
ops.element("ShellMITC4",30,105,85,84,104,100) 
ops.element("ShellMITC4",31,34,106,108,33,100) 
ops.element("ShellMITC4",32,33,108,81,32,100) 
ops.element("ShellMITC4",33,106,107,109,108,100) 
ops.element("ShellMITC4",34,108,109,80,81,100) 
ops.element("ShellMITC4",35,107,99,98,109,100) 
ops.element("ShellMITC4",36,109,98,79,80,100) 
ops.element("ShellMITC4",37,37,38,110,36,100) 
ops.element("ShellMITC4",38,36,110,111,35,100) 
ops.element("ShellMITC4",39,35,111,106,34,100) 
ops.element("ShellMITC4",40,101,112,39,40,100) 
ops.element("ShellMITC4",41,112,110,38,39,100) 
ops.element("ShellMITC4",42,99,107,113,100,100) 
ops.element("ShellMITC4",43,100,113,112,101,100) 
ops.element("ShellMITC4",44,107,106,111,113,100) 
ops.element("ShellMITC4",45,113,111,110,112,100) 
ops.element("ShellMITC4",46,115,118,122,114,100) 
ops.element("ShellMITC4",47,114,122,21,22,100) 
ops.element("ShellMITC4",48,118,119,121,122,100) 
ops.element("ShellMITC4",49,122,121,20,21,100) 
ops.element("ShellMITC4",50,119,120,123,121,100) 
ops.element("ShellMITC4",51,121,123,19,20,100) 
ops.element("ShellMITC4",52,120,72,73,123,100) 
ops.element("ShellMITC4",53,123,73,18,19,100) 
ops.element("ShellMITC4",54,124,126,76,75,100) 
ops.element("ShellMITC4",55,126,117,77,76,100) 
ops.element("ShellMITC4",56,119,118,127,125,100) 
ops.element("ShellMITC4",57,125,127,126,124,100) 
ops.element("ShellMITC4",58,118,115,116,127,100) 
ops.element("ShellMITC4",59,127,116,117,126,100) 
ops.element("ShellMITC4",60,70,128,74,69,100) 
ops.element("ShellMITC4",61,128,124,75,74,100) 
ops.element("ShellMITC4",62,72,120,129,71,100) 
ops.element("ShellMITC4",63,71,129,128,70,100) 
ops.element("ShellMITC4",64,120,119,125,129,100) 
ops.element("ShellMITC4",65,129,125,124,128,100) 
ops.element("ShellMITC4",66,131,134,135,130,100) 
ops.element("ShellMITC4",67,130,135,23,24,100) 
ops.element("ShellMITC4",68,134,115,114,135,100) 
ops.element("ShellMITC4",69,135,114,22,23,100) 
ops.element("ShellMITC4",70,132,136,134,131,100) 
ops.element("ShellMITC4",71,136,116,115,134,100) 
ops.element("ShellMITC4",72,79,78,137,133,100) 
ops.element("ShellMITC4",73,133,137,136,132,100) 
ops.element("ShellMITC4",74,78,77,117,137,100) 
ops.element("ShellMITC4",75,137,117,116,136,100) 
ops.element("ShellMITC4",76,29,138,140,28,100) 
ops.element("ShellMITC4",77,28,140,26,27,100) 
ops.element("ShellMITC4",78,138,139,141,140,100) 
ops.element("ShellMITC4",79,140,141,25,26,100) 
ops.element("ShellMITC4",80,139,131,130,141,100) 
ops.element("ShellMITC4",81,141,130,24,25,100) 
ops.element("ShellMITC4",82,32,81,142,31,100) 
ops.element("ShellMITC4",83,31,142,143,30,100) 
ops.element("ShellMITC4",84,30,143,138,29,100) 
ops.element("ShellMITC4",85,133,144,80,79,100) 
ops.element("ShellMITC4",86,144,142,81,80,100) 
ops.element("ShellMITC4",87,131,139,145,132,100) 
ops.element("ShellMITC4",88,132,145,144,133,100) 
ops.element("ShellMITC4",89,139,138,143,145,100) 
ops.element("ShellMITC4",90,145,143,142,144,100) 
ops.element("ShellMITC4",91,155,158,162,154,100) 
ops.element("ShellMITC4",92,154,162,148,149,100) 
ops.element("ShellMITC4",93,158,159,161,162,100) 
ops.element("ShellMITC4",94,162,161,147,148,100) 
ops.element("ShellMITC4",95,159,160,163,161,100) 
ops.element("ShellMITC4",96,161,163,146,147,100) 
ops.element("ShellMITC4",97,160,58,59,163,100) 
ops.element("ShellMITC4",98,163,59,60,146,100) 
ops.element("ShellMITC4",99,164,166,52,53,100) 
ops.element("ShellMITC4",100,166,157,51,52,100) 
ops.element("ShellMITC4",101,159,158,167,165,100) 
ops.element("ShellMITC4",102,165,167,166,164,100) 
ops.element("ShellMITC4",103,158,155,156,167,100) 
ops.element("ShellMITC4",104,167,156,157,166,100) 
ops.element("ShellMITC4",105,56,168,54,55,100) 
ops.element("ShellMITC4",106,168,164,53,54,100) 
ops.element("ShellMITC4",107,58,160,169,57,100) 
ops.element("ShellMITC4",108,57,169,168,56,100) 
ops.element("ShellMITC4",109,160,159,165,169,100) 
ops.element("ShellMITC4",110,169,165,164,168,100) 
ops.element("ShellMITC4",111,171,174,175,170,100) 
ops.element("ShellMITC4",112,170,175,150,151,100) 
ops.element("ShellMITC4",113,174,155,154,175,100) 
ops.element("ShellMITC4",114,175,154,149,150,100) 
ops.element("ShellMITC4",115,172,176,174,171,100) 
ops.element("ShellMITC4",116,176,156,155,174,100) 
ops.element("ShellMITC4",117,49,50,177,173,100) 
ops.element("ShellMITC4",118,173,177,176,172,100) 
ops.element("ShellMITC4",119,50,51,157,177,100) 
ops.element("ShellMITC4",120,177,157,156,176,100) 
ops.element("ShellMITC4",121,67,178,180,68,100) 
ops.element("ShellMITC4",122,68,180,153,69,100) 
ops.element("ShellMITC4",123,178,179,181,180,100) 
ops.element("ShellMITC4",124,180,181,152,153,100) 
ops.element("ShellMITC4",125,179,171,170,181,100) 
ops.element("ShellMITC4",126,181,170,151,152,100) 
ops.element("ShellMITC4",127,46,47,182,65,100) 
ops.element("ShellMITC4",128,65,182,183,66,100) 
ops.element("ShellMITC4",129,66,183,178,67,100) 
ops.element("ShellMITC4",130,173,184,48,49,100) 
ops.element("ShellMITC4",131,184,182,47,48,100) 
ops.element("ShellMITC4",132,171,179,185,172,100) 
ops.element("ShellMITC4",133,172,185,184,173,100) 
ops.element("ShellMITC4",134,179,178,183,185,100) 
ops.element("ShellMITC4",135,185,183,182,184,100) 
ops.element("ShellMITC4",136,187,190,194,186,100) 
ops.element("ShellMITC4",137,186,194,12,13,100) 
ops.element("ShellMITC4",138,190,191,193,194,100) 
ops.element("ShellMITC4",139,194,193,11,12,100) 
ops.element("ShellMITC4",140,191,192,195,193,100) 
ops.element("ShellMITC4",141,193,195,10,11,100) 
ops.element("ShellMITC4",142,192,63,64,195,100) 
ops.element("ShellMITC4",143,195,64,9,10,100) 
ops.element("ShellMITC4",144,196,198,148,147,100) 
ops.element("ShellMITC4",145,198,189,149,148,100) 
ops.element("ShellMITC4",146,191,190,199,197,100) 
ops.element("ShellMITC4",147,197,199,198,196,100) 
ops.element("ShellMITC4",148,190,187,188,199,100) 
ops.element("ShellMITC4",149,199,188,189,198,100) 
ops.element("ShellMITC4",150,61,200,146,60,100) 
ops.element("ShellMITC4",151,200,196,147,146,100) 
ops.element("ShellMITC4",152,63,192,201,62,100) 
ops.element("ShellMITC4",153,62,201,200,61,100) 
ops.element("ShellMITC4",154,192,191,197,201,100) 
ops.element("ShellMITC4",155,201,197,196,200,100) 
ops.element("ShellMITC4",156,203,206,207,202,100) 
ops.element("ShellMITC4",157,202,207,14,15,100) 
ops.element("ShellMITC4",158,206,187,186,207,100) 
ops.element("ShellMITC4",159,207,186,13,14,100) 
ops.element("ShellMITC4",160,204,208,206,203,100) 
ops.element("ShellMITC4",161,208,188,187,206,100) 
ops.element("ShellMITC4",162,151,150,209,205,100) 
ops.element("ShellMITC4",163,205,209,208,204,100) 
ops.element("ShellMITC4",164,150,149,189,209,100) 
ops.element("ShellMITC4",165,209,189,188,208,100) 
ops.element("ShellMITC4",166,72,210,212,73,100) 
ops.element("ShellMITC4",167,73,212,17,18,100) 
ops.element("ShellMITC4",168,210,211,213,212,100) 
ops.element("ShellMITC4",169,212,213,16,17,100) 
ops.element("ShellMITC4",170,211,203,202,213,100) 
ops.element("ShellMITC4",171,213,202,15,16,100) 
ops.element("ShellMITC4",172,69,153,214,70,100) 
ops.element("ShellMITC4",173,70,214,215,71,100) 
ops.element("ShellMITC4",174,71,215,210,72,100) 
ops.element("ShellMITC4",175,205,216,152,151,100) 
ops.element("ShellMITC4",176,216,214,153,152,100) 
ops.element("ShellMITC4",177,203,211,217,204,100) 
ops.element("ShellMITC4",178,204,217,216,205,100) 
ops.element("ShellMITC4",179,211,210,215,217,100) 
ops.element("ShellMITC4",180,217,215,214,216,100) 
ops.element("ShellMITC4",181,273,276,280,272,100) 
ops.element("ShellMITC4",182,272,280,266,267,100) 
ops.element("ShellMITC4",183,276,277,279,280,100) 
ops.element("ShellMITC4",184,280,279,265,266,100) 
ops.element("ShellMITC4",185,277,278,281,279,100) 
ops.element("ShellMITC4",186,279,281,264,265,100) 
ops.element("ShellMITC4",187,278,257,258,281,100) 
ops.element("ShellMITC4",188,281,258,259,264,100) 
ops.element("ShellMITC4",189,282,284,233,234,100) 
ops.element("ShellMITC4",190,284,275,232,233,100) 
ops.element("ShellMITC4",191,277,276,285,283,100) 
ops.element("ShellMITC4",192,283,285,284,282,100) 
ops.element("ShellMITC4",193,276,273,274,285,100) 
ops.element("ShellMITC4",194,285,274,275,284,100) 
ops.element("ShellMITC4",195,255,286,235,236,100) 
ops.element("ShellMITC4",196,286,282,234,235,100) 
ops.element("ShellMITC4",197,257,278,287,256,100) 
ops.element("ShellMITC4",198,256,287,286,255,100) 
ops.element("ShellMITC4",199,278,277,283,287,100) 
ops.element("ShellMITC4",200,287,283,282,286,100) 
ops.element("ShellMITC4",201,289,292,293,288,100) 
ops.element("ShellMITC4",202,288,293,268,269,100) 
ops.element("ShellMITC4",203,292,273,272,293,100) 
ops.element("ShellMITC4",204,293,272,267,268,100) 
ops.element("ShellMITC4",205,290,294,292,289,100) 
ops.element("ShellMITC4",206,294,274,273,292,100) 
ops.element("ShellMITC4",207,230,231,295,291,100) 
ops.element("ShellMITC4",208,291,295,294,290,100) 
ops.element("ShellMITC4",209,231,232,275,295,100) 
ops.element("ShellMITC4",210,295,275,274,294,100) 
ops.element("ShellMITC4",211,224,296,298,223,100) 
ops.element("ShellMITC4",212,223,298,271,222,100) 
ops.element("ShellMITC4",213,296,297,299,298,100) 
ops.element("ShellMITC4",214,298,299,270,271,100) 
ops.element("ShellMITC4",215,297,289,288,299,100) 
ops.element("ShellMITC4",216,299,288,269,270,100) 
ops.element("ShellMITC4",217,227,228,300,226,100) 
ops.element("ShellMITC4",218,226,300,301,225,100) 
ops.element("ShellMITC4",219,225,301,296,224,100) 
ops.element("ShellMITC4",220,291,302,229,230,100) 
ops.element("ShellMITC4",221,302,300,228,229,100) 
ops.element("ShellMITC4",222,289,297,303,290,100) 
ops.element("ShellMITC4",223,290,303,302,291,100) 
ops.element("ShellMITC4",224,297,296,301,303,100) 
ops.element("ShellMITC4",225,303,301,300,302,100) 
ops.element("ShellMITC4",226,305,308,312,304,100) 
ops.element("ShellMITC4",227,304,312,15,14,100) 
ops.element("ShellMITC4",228,308,309,311,312,100) 
ops.element("ShellMITC4",229,312,311,16,15,100) 
ops.element("ShellMITC4",230,309,310,313,311,100) 
ops.element("ShellMITC4",231,311,313,17,16,100) 
ops.element("ShellMITC4",232,310,262,263,313,100) 
ops.element("ShellMITC4",233,313,263,18,17,100) 
ops.element("ShellMITC4",234,314,316,266,265,100) 
ops.element("ShellMITC4",235,316,307,267,266,100) 
ops.element("ShellMITC4",236,309,308,317,315,100) 
ops.element("ShellMITC4",237,315,317,316,314,100) 
ops.element("ShellMITC4",238,308,305,306,317,100) 
ops.element("ShellMITC4",239,317,306,307,316,100) 
ops.element("ShellMITC4",240,260,318,264,259,100) 
ops.element("ShellMITC4",241,318,314,265,264,100) 
ops.element("ShellMITC4",242,262,310,319,261,100) 
ops.element("ShellMITC4",243,261,319,318,260,100) 
ops.element("ShellMITC4",244,310,309,315,319,100) 
ops.element("ShellMITC4",245,319,315,314,318,100) 
ops.element("ShellMITC4",246,321,324,325,320,100) 
ops.element("ShellMITC4",247,320,325,13,12,100) 
ops.element("ShellMITC4",248,324,305,304,325,100) 
ops.element("ShellMITC4",249,325,304,14,13,100) 
ops.element("ShellMITC4",250,322,326,324,321,100) 
ops.element("ShellMITC4",251,326,306,305,324,100) 
ops.element("ShellMITC4",252,269,268,327,323,100) 
ops.element("ShellMITC4",253,323,327,326,322,100) 
ops.element("ShellMITC4",254,268,267,307,327,100) 
ops.element("ShellMITC4",255,327,307,306,326,100) 
ops.element("ShellMITC4",256,219,328,330,218,100) 
ops.element("ShellMITC4",257,218,330,10,9,100) 
ops.element("ShellMITC4",258,328,329,331,330,100) 
ops.element("ShellMITC4",259,330,331,11,10,100) 
ops.element("ShellMITC4",260,329,321,320,331,100) 
ops.element("ShellMITC4",261,331,320,12,11,100) 
ops.element("ShellMITC4",262,222,271,332,221,100) 
ops.element("ShellMITC4",263,221,332,333,220,100) 
ops.element("ShellMITC4",264,220,333,328,219,100) 
ops.element("ShellMITC4",265,323,334,270,269,100) 
ops.element("ShellMITC4",266,334,332,271,270,100) 
ops.element("ShellMITC4",267,321,329,335,322,100) 
ops.element("ShellMITC4",268,322,335,334,323,100) 
ops.element("ShellMITC4",269,329,328,333,335,100) 
ops.element("ShellMITC4",270,335,333,332,334,100) 
ops.element("ShellMITC4",271,345,348,352,344,100) 
ops.element("ShellMITC4",272,344,352,338,339,100) 
ops.element("ShellMITC4",273,348,349,351,352,100) 
ops.element("ShellMITC4",274,352,351,337,338,100) 
ops.element("ShellMITC4",275,349,350,353,351,100) 
ops.element("ShellMITC4",276,351,353,336,337,100) 
ops.element("ShellMITC4",277,350,248,249,353,100) 
ops.element("ShellMITC4",278,353,249,250,336,100) 
ops.element("ShellMITC4",279,354,356,242,243,100) 
ops.element("ShellMITC4",280,356,347,241,242,100) 
ops.element("ShellMITC4",281,349,348,357,355,100) 
ops.element("ShellMITC4",282,355,357,356,354,100) 
ops.element("ShellMITC4",283,348,345,346,357,100) 
ops.element("ShellMITC4",284,357,346,347,356,100) 
ops.element("ShellMITC4",285,246,358,244,245,100) 
ops.element("ShellMITC4",286,358,354,243,244,100) 
ops.element("ShellMITC4",287,248,350,359,247,100) 
ops.element("ShellMITC4",288,247,359,358,246,100) 
ops.element("ShellMITC4",289,350,349,355,359,100) 
ops.element("ShellMITC4",290,359,355,354,358,100) 
ops.element("ShellMITC4",291,361,364,365,360,100) 
ops.element("ShellMITC4",292,360,365,340,341,100) 
ops.element("ShellMITC4",293,364,345,344,365,100) 
ops.element("ShellMITC4",294,365,344,339,340,100) 
ops.element("ShellMITC4",295,362,366,364,361,100) 
ops.element("ShellMITC4",296,366,346,345,364,100) 
ops.element("ShellMITC4",297,239,240,367,363,100) 
ops.element("ShellMITC4",298,363,367,366,362,100) 
ops.element("ShellMITC4",299,240,241,347,367,100) 
ops.element("ShellMITC4",300,367,347,346,366,100) 
ops.element("ShellMITC4",301,257,368,370,258,100) 
ops.element("ShellMITC4",302,258,370,343,259,100) 
ops.element("ShellMITC4",303,368,369,371,370,100) 
ops.element("ShellMITC4",304,370,371,342,343,100) 
ops.element("ShellMITC4",305,369,361,360,371,100) 
ops.element("ShellMITC4",306,371,360,341,342,100) 
ops.element("ShellMITC4",307,236,237,372,255,100) 
ops.element("ShellMITC4",308,255,372,373,256,100) 
ops.element("ShellMITC4",309,256,373,368,257,100) 
ops.element("ShellMITC4",310,363,374,238,239,100) 
ops.element("ShellMITC4",311,374,372,237,238,100) 
ops.element("ShellMITC4",312,361,369,375,362,100) 
ops.element("ShellMITC4",313,362,375,374,363,100) 
ops.element("ShellMITC4",314,369,368,373,375,100) 
ops.element("ShellMITC4",315,375,373,372,374,100) 
ops.element("ShellMITC4",316,377,380,384,376,100) 
ops.element("ShellMITC4",317,376,384,24,23,100) 
ops.element("ShellMITC4",318,380,381,383,384,100) 
ops.element("ShellMITC4",319,384,383,25,24,100) 
ops.element("ShellMITC4",320,381,382,385,383,100) 
ops.element("ShellMITC4",321,383,385,26,25,100) 
ops.element("ShellMITC4",322,382,253,254,385,100) 
ops.element("ShellMITC4",323,385,254,27,26,100) 
ops.element("ShellMITC4",324,386,388,338,337,100) 
ops.element("ShellMITC4",325,388,379,339,338,100) 
ops.element("ShellMITC4",326,381,380,389,387,100) 
ops.element("ShellMITC4",327,387,389,388,386,100) 
ops.element("ShellMITC4",328,380,377,378,389,100) 
ops.element("ShellMITC4",329,389,378,379,388,100) 
ops.element("ShellMITC4",330,251,390,336,250,100) 
ops.element("ShellMITC4",331,390,386,337,336,100) 
ops.element("ShellMITC4",332,253,382,391,252,100) 
ops.element("ShellMITC4",333,252,391,390,251,100) 
ops.element("ShellMITC4",334,382,381,387,391,100) 
ops.element("ShellMITC4",335,391,387,386,390,100) 
ops.element("ShellMITC4",336,393,396,397,392,100) 
ops.element("ShellMITC4",337,392,397,22,21,100) 
ops.element("ShellMITC4",338,396,377,376,397,100) 
ops.element("ShellMITC4",339,397,376,23,22,100) 
ops.element("ShellMITC4",340,394,398,396,393,100) 
ops.element("ShellMITC4",341,398,378,377,396,100) 
ops.element("ShellMITC4",342,341,340,399,395,100) 
ops.element("ShellMITC4",343,395,399,398,394,100) 
ops.element("ShellMITC4",344,340,339,379,399,100) 
ops.element("ShellMITC4",345,399,379,378,398,100) 
ops.element("ShellMITC4",346,262,400,402,263,100) 
ops.element("ShellMITC4",347,263,402,19,18,100) 
ops.element("ShellMITC4",348,400,401,403,402,100) 
ops.element("ShellMITC4",349,402,403,20,19,100) 
ops.element("ShellMITC4",350,401,393,392,403,100) 
ops.element("ShellMITC4",351,403,392,21,20,100) 
ops.element("ShellMITC4",352,259,343,404,260,100) 
ops.element("ShellMITC4",353,260,404,405,261,100) 
ops.element("ShellMITC4",354,261,405,400,262,100) 
ops.element("ShellMITC4",355,395,406,342,341,100) 
ops.element("ShellMITC4",356,406,404,343,342,100) 
ops.element("ShellMITC4",357,393,401,407,394,100) 
ops.element("ShellMITC4",358,394,407,406,395,100) 
ops.element("ShellMITC4",359,401,400,405,407,100) 
ops.element("ShellMITC4",360,407,405,404,406,100) 
ops.element("ShellMITC4",361,441,444,445,440,100) 
ops.element("ShellMITC4",362,440,445,436,437,100) 
ops.element("ShellMITC4",363,444,429,430,445,100) 
ops.element("ShellMITC4",364,445,430,431,436,100) 
ops.element("ShellMITC4",365,442,446,444,441,100) 
ops.element("ShellMITC4",366,446,428,429,444,100) 
ops.element("ShellMITC4",367,410,411,447,443,100) 
ops.element("ShellMITC4",368,443,447,446,442,100) 
ops.element("ShellMITC4",369,411,412,427,447,100) 
ops.element("ShellMITC4",370,447,427,428,446,100) 
ops.element("ShellMITC4",371,248,448,450,249,100) 
ops.element("ShellMITC4",372,249,450,439,250,100) 
ops.element("ShellMITC4",373,448,449,451,450,100) 
ops.element("ShellMITC4",374,450,451,438,439,100) 
ops.element("ShellMITC4",375,449,441,440,451,100) 
ops.element("ShellMITC4",376,451,440,437,438,100) 
ops.element("ShellMITC4",377,247,452,448,248,100) 
ops.element("ShellMITC4",378,452,453,449,448,100) 
ops.element("ShellMITC4",379,453,442,441,449,100) 
ops.element("ShellMITC4",380,245,408,454,246,100) 
ops.element("ShellMITC4",381,246,454,452,247,100) 
ops.element("ShellMITC4",382,408,409,455,454,100) 
ops.element("ShellMITC4",383,454,455,453,452,100) 
ops.element("ShellMITC4",384,409,410,443,455,100) 
ops.element("ShellMITC4",385,455,443,442,453,100) 
ops.element("ShellMITC4",386,456,461,31,30,100) 
ops.element("ShellMITC4",387,461,435,32,31,100) 
ops.element("ShellMITC4",388,457,460,461,456,100) 
ops.element("ShellMITC4",389,460,434,435,461,100) 
ops.element("ShellMITC4",390,458,462,460,457,100) 
ops.element("ShellMITC4",391,462,433,434,460,100) 
ops.element("ShellMITC4",392,459,463,462,458,100) 
ops.element("ShellMITC4",393,463,432,433,462,100) 
ops.element("ShellMITC4",394,437,436,463,459,100) 
ops.element("ShellMITC4",395,436,431,432,463,100) 
ops.element("ShellMITC4",396,253,464,466,254,100) 
ops.element("ShellMITC4",397,254,466,28,27,100) 
ops.element("ShellMITC4",398,464,465,467,466,100) 
ops.element("ShellMITC4",399,466,467,29,28,100) 
ops.element("ShellMITC4",400,465,457,456,467,100) 
ops.element("ShellMITC4",401,467,456,30,29,100) 
ops.element("ShellMITC4",402,252,468,464,253,100) 
ops.element("ShellMITC4",403,468,469,465,464,100) 
ops.element("ShellMITC4",404,469,458,457,465,100) 
ops.element("ShellMITC4",405,250,439,470,251,100) 
ops.element("ShellMITC4",406,251,470,468,252,100) 
ops.element("ShellMITC4",407,459,471,438,437,100) 
ops.element("ShellMITC4",408,471,470,439,438,100) 
ops.element("ShellMITC4",409,458,469,471,459,100) 
ops.element("ShellMITC4",410,469,468,470,471,100) 
ops.element("ShellMITC4",411,476,481,472,473,100) 
ops.element("ShellMITC4",412,481,421,422,472,100) 
ops.element("ShellMITC4",413,477,480,481,476,100) 
ops.element("ShellMITC4",414,480,420,421,481,100) 
ops.element("ShellMITC4",415,478,482,480,477,100) 
ops.element("ShellMITC4",416,482,419,420,480,100) 
ops.element("ShellMITC4",417,415,416,483,479,100) 
ops.element("ShellMITC4",418,479,483,482,478,100) 
ops.element("ShellMITC4",419,416,417,418,483,100) 
ops.element("ShellMITC4",420,483,418,419,482,100) 
ops.element("ShellMITC4",421,429,484,486,430,100) 
ops.element("ShellMITC4",422,430,486,475,431,100) 
ops.element("ShellMITC4",423,484,485,487,486,100) 
ops.element("ShellMITC4",424,486,487,474,475,100) 
ops.element("ShellMITC4",425,485,477,476,487,100) 
ops.element("ShellMITC4",426,487,476,473,474,100) 
ops.element("ShellMITC4",427,412,413,488,427,100) 
ops.element("ShellMITC4",428,427,488,489,428,100) 
ops.element("ShellMITC4",429,428,489,484,429,100) 
ops.element("ShellMITC4",430,479,490,414,415,100) 
ops.element("ShellMITC4",431,490,488,413,414,100) 
ops.element("ShellMITC4",432,477,485,491,478,100) 
ops.element("ShellMITC4",433,478,491,490,479,100) 
ops.element("ShellMITC4",434,485,484,489,491,100) 
ops.element("ShellMITC4",435,491,489,488,490,100) 
ops.element("ShellMITC4",436,493,496,497,492,100) 
ops.element("ShellMITC4",437,492,497,36,35,100) 
ops.element("ShellMITC4",438,496,425,426,497,100) 
ops.element("ShellMITC4",439,497,426,37,36,100) 
ops.element("ShellMITC4",440,494,498,496,493,100) 
ops.element("ShellMITC4",441,498,424,425,496,100) 
ops.element("ShellMITC4",442,473,472,499,495,100) 
ops.element("ShellMITC4",443,495,499,498,494,100) 
ops.element("ShellMITC4",444,472,422,423,499,100) 
ops.element("ShellMITC4",445,499,423,424,498,100) 
ops.element("ShellMITC4",446,434,500,502,435,100) 
ops.element("ShellMITC4",447,435,502,33,32,100) 
ops.element("ShellMITC4",448,492,503,501,493,100) 
ops.element("ShellMITC4",449,503,502,500,501,100) 
ops.element("ShellMITC4",450,35,34,503,492,100) 
ops.element("ShellMITC4",451,34,33,502,503,100) 
ops.element("ShellMITC4",452,433,504,500,434,100) 
ops.element("ShellMITC4",453,504,505,501,500,100) 
ops.element("ShellMITC4",454,505,494,493,501,100) 
ops.element("ShellMITC4",455,431,475,506,432,100) 
ops.element("ShellMITC4",456,432,506,504,433,100) 
ops.element("ShellMITC4",457,495,507,474,473,100) 
ops.element("ShellMITC4",458,507,506,475,474,100) 
ops.element("ShellMITC4",459,494,505,507,495,100) 
ops.element("ShellMITC4",460,505,504,506,507,100) 
ops.element("ShellMITC4",461,553,556,560,552,100) 
ops.element("ShellMITC4",462,552,560,546,547,100) 
ops.element("ShellMITC4",463,556,557,559,560,100) 
ops.element("ShellMITC4",464,560,559,545,546,100) 
ops.element("ShellMITC4",465,557,558,561,559,100) 
ops.element("ShellMITC4",466,559,561,544,545,100) 
ops.element("ShellMITC4",467,558,537,538,561,100) 
ops.element("ShellMITC4",468,561,538,539,544,100) 
ops.element("ShellMITC4",469,562,564,513,514,100) 
ops.element("ShellMITC4",470,564,555,512,513,100) 
ops.element("ShellMITC4",471,557,556,565,563,100) 
ops.element("ShellMITC4",472,563,565,564,562,100) 
ops.element("ShellMITC4",473,556,553,554,565,100) 
ops.element("ShellMITC4",474,565,554,555,564,100) 
ops.element("ShellMITC4",475,535,566,515,516,100) 
ops.element("ShellMITC4",476,566,562,514,515,100) 
ops.element("ShellMITC4",477,537,558,567,536,100) 
ops.element("ShellMITC4",478,536,567,566,535,100) 
ops.element("ShellMITC4",479,558,557,563,567,100) 
ops.element("ShellMITC4",480,567,563,562,566,100) 
ops.element("ShellMITC4",481,569,572,573,568,100) 
ops.element("ShellMITC4",482,568,573,548,549,100) 
ops.element("ShellMITC4",483,572,553,552,573,100) 
ops.element("ShellMITC4",484,573,552,547,548,100) 
ops.element("ShellMITC4",485,570,574,572,569,100) 
ops.element("ShellMITC4",486,574,554,553,572,100) 
ops.element("ShellMITC4",487,510,511,575,571,100) 
ops.element("ShellMITC4",488,571,575,574,570,100) 
ops.element("ShellMITC4",489,511,512,555,575,100) 
ops.element("ShellMITC4",490,575,555,554,574,100) 
ops.element("ShellMITC4",491,420,576,578,421,100) 
ops.element("ShellMITC4",492,421,578,551,422,100) 
ops.element("ShellMITC4",493,576,577,579,578,100) 
ops.element("ShellMITC4",494,578,579,550,551,100) 
ops.element("ShellMITC4",495,577,569,568,579,100) 
ops.element("ShellMITC4",496,579,568,549,550,100) 
ops.element("ShellMITC4",497,417,508,580,418,100) 
ops.element("ShellMITC4",498,418,580,581,419,100) 
ops.element("ShellMITC4",499,419,581,576,420,100) 
ops.element("ShellMITC4",500,571,582,509,510,100) 
ops.element("ShellMITC4",501,582,580,508,509,100) 
ops.element("ShellMITC4",502,569,577,583,570,100) 
ops.element("ShellMITC4",503,570,583,582,571,100) 
ops.element("ShellMITC4",504,577,576,581,583,100) 
ops.element("ShellMITC4",505,583,581,580,582,100) 
ops.element("ShellMITC4",506,585,588,592,584,100) 
ops.element("ShellMITC4",507,584,592,43,42,100) 
ops.element("ShellMITC4",508,588,589,591,592,100) 
ops.element("ShellMITC4",509,592,591,44,43,100) 
ops.element("ShellMITC4",510,589,590,593,591,100) 
ops.element("ShellMITC4",511,591,593,45,44,100) 
ops.element("ShellMITC4",512,590,542,543,593,100) 
ops.element("ShellMITC4",513,593,543,46,45,100) 
ops.element("ShellMITC4",514,594,596,546,545,100) 
ops.element("ShellMITC4",515,596,587,547,546,100) 
ops.element("ShellMITC4",516,589,588,597,595,100) 
ops.element("ShellMITC4",517,595,597,596,594,100) 
ops.element("ShellMITC4",518,588,585,586,597,100) 
ops.element("ShellMITC4",519,597,586,587,596,100) 
ops.element("ShellMITC4",520,540,598,544,539,100) 
ops.element("ShellMITC4",521,598,594,545,544,100) 
ops.element("ShellMITC4",522,542,590,599,541,100) 
ops.element("ShellMITC4",523,541,599,598,540,100) 
ops.element("ShellMITC4",524,590,589,595,599,100) 
ops.element("ShellMITC4",525,599,595,594,598,100) 
ops.element("ShellMITC4",526,601,604,605,600,100) 
ops.element("ShellMITC4",527,600,605,41,40,100) 
ops.element("ShellMITC4",528,604,585,584,605,100) 
ops.element("ShellMITC4",529,605,584,42,41,100) 
ops.element("ShellMITC4",530,602,606,604,601,100) 
ops.element("ShellMITC4",531,606,586,585,604,100) 
ops.element("ShellMITC4",532,549,548,607,603,100) 
ops.element("ShellMITC4",533,603,607,606,602,100) 
ops.element("ShellMITC4",534,548,547,587,607,100) 
ops.element("ShellMITC4",535,607,587,586,606,100) 
ops.element("ShellMITC4",536,425,608,610,426,100) 
ops.element("ShellMITC4",537,426,610,38,37,100) 
ops.element("ShellMITC4",538,608,609,611,610,100) 
ops.element("ShellMITC4",539,610,611,39,38,100) 
ops.element("ShellMITC4",540,609,601,600,611,100) 
ops.element("ShellMITC4",541,611,600,40,39,100) 
ops.element("ShellMITC4",542,422,551,612,423,100) 
ops.element("ShellMITC4",543,423,612,613,424,100) 
ops.element("ShellMITC4",544,424,613,608,425,100) 
ops.element("ShellMITC4",545,603,614,550,549,100) 
ops.element("ShellMITC4",546,614,612,551,550,100) 
ops.element("ShellMITC4",547,601,609,615,602,100) 
ops.element("ShellMITC4",548,602,615,614,603,100) 
ops.element("ShellMITC4",549,609,608,613,615,100) 
ops.element("ShellMITC4",550,615,613,612,614,100) 
ops.element("ShellMITC4",551,625,628,632,624,100) 
ops.element("ShellMITC4",552,624,632,618,619,100) 
ops.element("ShellMITC4",553,628,629,631,632,100) 
ops.element("ShellMITC4",554,632,631,617,618,100) 
ops.element("ShellMITC4",555,629,630,633,631,100) 
ops.element("ShellMITC4",556,631,633,616,617,100) 
ops.element("ShellMITC4",557,630,528,529,633,100) 
ops.element("ShellMITC4",558,633,529,530,616,100) 
ops.element("ShellMITC4",559,634,636,522,523,100) 
ops.element("ShellMITC4",560,636,627,521,522,100) 
ops.element("ShellMITC4",561,629,628,637,635,100) 
ops.element("ShellMITC4",562,635,637,636,634,100) 
ops.element("ShellMITC4",563,628,625,626,637,100) 
ops.element("ShellMITC4",564,637,626,627,636,100) 
ops.element("ShellMITC4",565,526,638,524,525,100) 
ops.element("ShellMITC4",566,638,634,523,524,100) 
ops.element("ShellMITC4",567,528,630,639,527,100) 
ops.element("ShellMITC4",568,527,639,638,526,100) 
ops.element("ShellMITC4",569,630,629,635,639,100) 
ops.element("ShellMITC4",570,639,635,634,638,100) 
ops.element("ShellMITC4",571,641,644,645,640,100) 
ops.element("ShellMITC4",572,640,645,620,621,100) 
ops.element("ShellMITC4",573,644,625,624,645,100) 
ops.element("ShellMITC4",574,645,624,619,620,100) 
ops.element("ShellMITC4",575,642,646,644,641,100) 
ops.element("ShellMITC4",576,646,626,625,644,100) 
ops.element("ShellMITC4",577,519,520,647,643,100) 
ops.element("ShellMITC4",578,643,647,646,642,100) 
ops.element("ShellMITC4",579,520,521,627,647,100) 
ops.element("ShellMITC4",580,647,627,626,646,100) 
ops.element("ShellMITC4",581,537,648,650,538,100) 
ops.element("ShellMITC4",582,538,650,623,539,100) 
ops.element("ShellMITC4",583,648,649,651,650,100) 
ops.element("ShellMITC4",584,650,651,622,623,100) 
ops.element("ShellMITC4",585,649,641,640,651,100) 
ops.element("ShellMITC4",586,651,640,621,622,100) 
ops.element("ShellMITC4",587,516,517,652,535,100) 
ops.element("ShellMITC4",588,535,652,653,536,100) 
ops.element("ShellMITC4",589,536,653,648,537,100) 
ops.element("ShellMITC4",590,643,654,518,519,100) 
ops.element("ShellMITC4",591,654,652,517,518,100) 
ops.element("ShellMITC4",592,641,649,655,642,100) 
ops.element("ShellMITC4",593,642,655,654,643,100) 
ops.element("ShellMITC4",594,649,648,653,655,100) 
ops.element("ShellMITC4",595,655,653,652,654,100) 
ops.element("ShellMITC4",596,657,660,664,656,100) 
ops.element("ShellMITC4",597,656,664,52,51,100) 
ops.element("ShellMITC4",598,660,661,663,664,100) 
ops.element("ShellMITC4",599,664,663,53,52,100) 
ops.element("ShellMITC4",600,661,662,665,663,100) 
ops.element("ShellMITC4",601,663,665,54,53,100) 
ops.element("ShellMITC4",602,662,533,534,665,100) 
ops.element("ShellMITC4",603,665,534,55,54,100) 
ops.element("ShellMITC4",604,666,668,618,617,100) 
ops.element("ShellMITC4",605,668,659,619,618,100) 
ops.element("ShellMITC4",606,661,660,669,667,100) 
ops.element("ShellMITC4",607,667,669,668,666,100) 
ops.element("ShellMITC4",608,660,657,658,669,100) 
ops.element("ShellMITC4",609,669,658,659,668,100) 
ops.element("ShellMITC4",610,531,670,616,530,100) 
ops.element("ShellMITC4",611,670,666,617,616,100) 
ops.element("ShellMITC4",612,533,662,671,532,100) 
ops.element("ShellMITC4",613,532,671,670,531,100) 
ops.element("ShellMITC4",614,662,661,667,671,100) 
ops.element("ShellMITC4",615,671,667,666,670,100) 
ops.element("ShellMITC4",616,673,676,677,672,100) 
ops.element("ShellMITC4",617,672,677,50,49,100) 
ops.element("ShellMITC4",618,676,657,656,677,100) 
ops.element("ShellMITC4",619,677,656,51,50,100) 
ops.element("ShellMITC4",620,674,678,676,673,100) 
ops.element("ShellMITC4",621,678,658,657,676,100) 
ops.element("ShellMITC4",622,621,620,679,675,100) 
ops.element("ShellMITC4",623,675,679,678,674,100) 
ops.element("ShellMITC4",624,620,619,659,679,100) 
ops.element("ShellMITC4",625,679,659,658,678,100) 
ops.element("ShellMITC4",626,542,680,682,543,100) 
ops.element("ShellMITC4",627,543,682,47,46,100) 
ops.element("ShellMITC4",628,680,681,683,682,100) 
ops.element("ShellMITC4",629,682,683,48,47,100) 
ops.element("ShellMITC4",630,681,673,672,683,100) 
ops.element("ShellMITC4",631,683,672,49,48,100) 
ops.element("ShellMITC4",632,539,623,684,540,100) 
ops.element("ShellMITC4",633,540,684,685,541,100) 
ops.element("ShellMITC4",634,541,685,680,542,100) 
ops.element("ShellMITC4",635,675,686,622,621,100) 
ops.element("ShellMITC4",636,686,684,623,622,100) 
ops.element("ShellMITC4",637,673,681,687,674,100) 
ops.element("ShellMITC4",638,674,687,686,675,100) 
ops.element("ShellMITC4",639,681,680,685,687,100) 
ops.element("ShellMITC4",640,687,685,684,686,100) 
ops.element("ShellMITC4",641,718,722,714,715,100) 
ops.element("ShellMITC4",642,722,708,709,714,100) 
ops.element("ShellMITC4",643,719,721,722,718,100) 
ops.element("ShellMITC4",644,721,707,708,722,100) 
ops.element("ShellMITC4",645,720,723,721,719,100) 
ops.element("ShellMITC4",646,723,706,707,721,100) 
ops.element("ShellMITC4",647,699,700,723,720,100) 
ops.element("ShellMITC4",648,700,701,706,723,100) 
ops.element("ShellMITC4",649,238,724,726,239,100) 
ops.element("ShellMITC4",650,239,726,717,240,100) 
ops.element("ShellMITC4",651,718,727,725,719,100) 
ops.element("ShellMITC4",652,727,726,724,725,100) 
ops.element("ShellMITC4",653,715,716,727,718,100) 
ops.element("ShellMITC4",654,716,717,726,727,100) 
ops.element("ShellMITC4",655,236,697,728,237,100) 
ops.element("ShellMITC4",656,237,728,724,238,100) 
ops.element("ShellMITC4",657,720,729,698,699,100) 
ops.element("ShellMITC4",658,729,728,697,698,100) 
ops.element("ShellMITC4",659,719,725,729,720,100) 
ops.element("ShellMITC4",660,725,724,728,729,100) 
ops.element("ShellMITC4",661,734,735,730,731,100) 
ops.element("ShellMITC4",662,735,710,711,730,100) 
ops.element("ShellMITC4",663,715,714,735,734,100) 
ops.element("ShellMITC4",664,714,709,710,735,100) 
ops.element("ShellMITC4",665,731,732,736,734,100) 
ops.element("ShellMITC4",666,734,736,716,715,100) 
ops.element("ShellMITC4",667,241,737,733,242,100) 
ops.element("ShellMITC4",668,737,736,732,733,100) 
ops.element("ShellMITC4",669,240,717,737,241,100) 
ops.element("ShellMITC4",670,717,716,736,737,100) 
ops.element("ShellMITC4",671,738,740,411,410,100) 
ops.element("ShellMITC4",672,740,713,412,411,100) 
ops.element("ShellMITC4",673,739,741,740,738,100) 
ops.element("ShellMITC4",674,741,712,713,740,100) 
ops.element("ShellMITC4",675,731,730,741,739,100) 
ops.element("ShellMITC4",676,730,711,712,741,100) 
ops.element("ShellMITC4",677,244,742,408,245,100) 
ops.element("ShellMITC4",678,742,743,409,408,100) 
ops.element("ShellMITC4",679,743,738,410,409,100) 
ops.element("ShellMITC4",680,242,733,744,243,100) 
ops.element("ShellMITC4",681,243,744,742,244,100) 
ops.element("ShellMITC4",682,739,745,732,731,100) 
ops.element("ShellMITC4",683,745,744,733,732,100) 
ops.element("ShellMITC4",684,738,743,745,739,100) 
ops.element("ShellMITC4",685,743,742,744,745,100) 
ops.element("ShellMITC4",686,750,754,746,747,100) 
ops.element("ShellMITC4",687,754,513,512,746,100) 
ops.element("ShellMITC4",688,751,753,754,750,100) 
ops.element("ShellMITC4",689,753,514,513,754,100) 
ops.element("ShellMITC4",690,752,755,753,751,100) 
ops.element("ShellMITC4",691,755,515,514,753,100) 
ops.element("ShellMITC4",692,704,705,755,752,100) 
ops.element("ShellMITC4",693,705,516,515,755,100) 
ops.element("ShellMITC4",694,707,756,758,708,100) 
ops.element("ShellMITC4",695,708,758,749,709,100) 
ops.element("ShellMITC4",696,750,759,757,751,100) 
ops.element("ShellMITC4",697,759,758,756,757,100) 
ops.element("ShellMITC4",698,747,748,759,750,100) 
ops.element("ShellMITC4",699,748,749,758,759,100) 
ops.element("ShellMITC4",700,701,702,760,706,100) 
ops.element("ShellMITC4",701,706,760,756,707,100) 
ops.element("ShellMITC4",702,752,761,703,704,100) 
ops.element("ShellMITC4",703,761,760,702,703,100) 
ops.element("ShellMITC4",704,751,757,761,752,100) 
ops.element("ShellMITC4",705,757,756,760,761,100) 
ops.element("ShellMITC4",706,766,767,762,763,100) 
ops.element("ShellMITC4",707,767,511,510,762,100) 
ops.element("ShellMITC4",708,747,746,767,766,100) 
ops.element("ShellMITC4",709,746,512,511,767,100) 
ops.element("ShellMITC4",710,763,764,768,766,100) 
ops.element("ShellMITC4",711,766,768,748,747,100) 
ops.element("ShellMITC4",712,710,769,765,711,100) 
ops.element("ShellMITC4",713,769,768,764,765,100) 
ops.element("ShellMITC4",714,709,749,769,710,100) 
ops.element("ShellMITC4",715,749,748,768,769,100) 
ops.element("ShellMITC4",716,770,772,416,415,100) 
ops.element("ShellMITC4",717,772,508,417,416,100) 
ops.element("ShellMITC4",718,771,773,772,770,100) 
ops.element("ShellMITC4",719,773,509,508,772,100) 
ops.element("ShellMITC4",720,763,762,773,771,100) 
ops.element("ShellMITC4",721,762,510,509,773,100) 
ops.element("ShellMITC4",722,713,774,413,412,100) 
ops.element("ShellMITC4",723,774,775,414,413,100) 
ops.element("ShellMITC4",724,775,770,415,414,100) 
ops.element("ShellMITC4",725,711,765,776,712,100) 
ops.element("ShellMITC4",726,712,776,774,713,100) 
ops.element("ShellMITC4",727,771,777,764,763,100) 
ops.element("ShellMITC4",728,777,776,765,764,100) 
ops.element("ShellMITC4",729,770,775,777,771,100) 
ops.element("ShellMITC4",730,775,774,776,777,100) 
ops.element("ShellMITC4",731,790,794,786,787,100) 
ops.element("ShellMITC4",732,794,780,781,786,100) 
ops.element("ShellMITC4",733,791,793,794,790,100) 
ops.element("ShellMITC4",734,793,779,780,794,100) 
ops.element("ShellMITC4",735,792,795,793,791,100) 
ops.element("ShellMITC4",736,795,778,779,793,100) 
ops.element("ShellMITC4",737,690,691,795,792,100) 
ops.element("ShellMITC4",738,691,692,778,795,100) 
ops.element("ShellMITC4",739,229,796,798,230,100) 
ops.element("ShellMITC4",740,230,798,789,231,100) 
ops.element("ShellMITC4",741,790,799,797,791,100) 
ops.element("ShellMITC4",742,799,798,796,797,100) 
ops.element("ShellMITC4",743,787,788,799,790,100) 
ops.element("ShellMITC4",744,788,789,798,799,100) 
ops.element("ShellMITC4",745,227,688,800,228,100) 
ops.element("ShellMITC4",746,228,800,796,229,100) 
ops.element("ShellMITC4",747,792,801,689,690,100) 
ops.element("ShellMITC4",748,801,800,688,689,100) 
ops.element("ShellMITC4",749,791,797,801,792,100) 
ops.element("ShellMITC4",750,797,796,800,801,100) 
ops.element("ShellMITC4",751,806,807,802,803,100) 
ops.element("ShellMITC4",752,807,782,783,802,100) 
ops.element("ShellMITC4",753,787,786,807,806,100) 
ops.element("ShellMITC4",754,786,781,782,807,100) 
ops.element("ShellMITC4",755,803,804,808,806,100) 
ops.element("ShellMITC4",756,806,808,788,787,100) 
ops.element("ShellMITC4",757,232,809,805,233,100) 
ops.element("ShellMITC4",758,809,808,804,805,100) 
ops.element("ShellMITC4",759,231,789,809,232,100) 
ops.element("ShellMITC4",760,789,788,808,809,100) 
ops.element("ShellMITC4",761,810,812,700,699,100) 
ops.element("ShellMITC4",762,812,785,701,700,100) 
ops.element("ShellMITC4",763,811,813,812,810,100) 
ops.element("ShellMITC4",764,813,784,785,812,100) 
ops.element("ShellMITC4",765,803,802,813,811,100) 
ops.element("ShellMITC4",766,802,783,784,813,100) 
ops.element("ShellMITC4",767,235,814,697,236,100) 
ops.element("ShellMITC4",768,814,815,698,697,100) 
ops.element("ShellMITC4",769,815,810,699,698,100) 
ops.element("ShellMITC4",770,233,805,816,234,100) 
ops.element("ShellMITC4",771,234,816,814,235,100) 
ops.element("ShellMITC4",772,811,817,804,803,100) 
ops.element("ShellMITC4",773,817,816,805,804,100) 
ops.element("ShellMITC4",774,810,815,817,811,100) 
ops.element("ShellMITC4",775,815,814,816,817,100) 
ops.element("ShellMITC4",776,822,826,818,819,100) 
ops.element("ShellMITC4",777,826,522,521,818,100) 
ops.element("ShellMITC4",778,823,825,826,822,100) 
ops.element("ShellMITC4",779,825,523,522,826,100) 
ops.element("ShellMITC4",780,824,827,825,823,100) 
ops.element("ShellMITC4",781,827,524,523,825,100) 
ops.element("ShellMITC4",782,695,696,827,824,100) 
ops.element("ShellMITC4",783,696,525,524,827,100) 
ops.element("ShellMITC4",784,779,828,830,780,100) 
ops.element("ShellMITC4",785,780,830,821,781,100) 
ops.element("ShellMITC4",786,822,831,829,823,100) 
ops.element("ShellMITC4",787,831,830,828,829,100) 
ops.element("ShellMITC4",788,819,820,831,822,100) 
ops.element("ShellMITC4",789,820,821,830,831,100) 
ops.element("ShellMITC4",790,692,693,832,778,100) 
ops.element("ShellMITC4",791,778,832,828,779,100) 
ops.element("ShellMITC4",792,824,833,694,695,100) 
ops.element("ShellMITC4",793,833,832,693,694,100) 
ops.element("ShellMITC4",794,823,829,833,824,100) 
ops.element("ShellMITC4",795,829,828,832,833,100) 
ops.element("ShellMITC4",796,838,839,834,835,100) 
ops.element("ShellMITC4",797,839,520,519,834,100) 
ops.element("ShellMITC4",798,819,818,839,838,100) 
ops.element("ShellMITC4",799,818,521,520,839,100) 
ops.element("ShellMITC4",800,835,836,840,838,100) 
ops.element("ShellMITC4",801,838,840,820,819,100) 
ops.element("ShellMITC4",802,782,841,837,783,100) 
ops.element("ShellMITC4",803,841,840,836,837,100) 
ops.element("ShellMITC4",804,781,821,841,782,100) 
ops.element("ShellMITC4",805,821,820,840,841,100) 
ops.element("ShellMITC4",806,842,844,705,704,100) 
ops.element("ShellMITC4",807,844,517,516,705,100) 
ops.element("ShellMITC4",808,843,845,844,842,100) 
ops.element("ShellMITC4",809,845,518,517,844,100) 
ops.element("ShellMITC4",810,835,834,845,843,100) 
ops.element("ShellMITC4",811,834,519,518,845,100) 
ops.element("ShellMITC4",812,785,846,702,701,100) 
ops.element("ShellMITC4",813,846,847,703,702,100) 
ops.element("ShellMITC4",814,847,842,704,703,100) 
ops.element("ShellMITC4",815,783,837,848,784,100) 
ops.element("ShellMITC4",816,784,848,846,785,100) 
ops.element("ShellMITC4",817,843,849,836,835,100) 
ops.element("ShellMITC4",818,849,848,837,836,100) 
ops.element("ShellMITC4",819,842,847,849,843,100) 
ops.element("ShellMITC4",820,847,846,848,849,100)



for i in range(9,26):
    FOAMySeesInstance.coupledNodes.append(i)
for i in range(38,244):
    FOAMySeesInstance.coupledNodes.append(i)
for i in range(255,407):
    FOAMySeesInstance.coupledNodes.append(i)
for i in range(508,829):
    FOAMySeesInstance.coupledNodes.append(i)

# print(mesh)
# with open('buildOpenSeesModel', 'a+') as f:
# 	f.seek(0)
# 	f.truncate()
# for entity in mesh.get_node_entities():
#     for nodes in entity.get_nodes():
#         nid = nodes.get_tag()
#         ncoords = nodes.get_coordinates()
#         print("Node id = %s, node coordinates = %s" % (nid, ncoords))
#         node(nid, ncoords[0], ncoords[1], ncoords[2])
#         with open('buildOpenSeesModel', 'a+') as f:
#             print('\n',file=f)
#             print('ops.node({}, {}, {}, {})'.format(nid, ncoords[0], ncoords[1], ncoords[2]),file=f)

        
# ##########################
# # ELEMENTS 
# ##########################

# ShellType = "ShellMITC4"



# for entity in mesh.get_element_entities():
# #    eltype = entity.get_element_type()
# #    print("Element type: %s" % eltype)
#     for elements in entity.get_elements():
#         elid = elements.get_tag()
#         elcon = elements.get_connectivity()
#         if len(elcon)>1:
#             print("Element id = %s, connectivity = %s" % (elid, elcon))
#             element(ShellType,elid,elcon[0],elcon[1],elcon[2],elcon[3],100)
#             with open('buildOpenSeesModel', 'a+') as f:
#                 print('\n',file=f)
#                 print('ops.element("ShellMITC4",{},{},{},{},{},{})'.format(elid,elcon[0],elcon[1],elcon[2],elcon[3],100),file=f)


allNodeLocs=[]

allNodes=ops.getNodeTags()
allNodes=set(allNodes)-set(soilnodes)
allNodes=list(allNodes)
for node in allNodes:
    allNodeLocs.append(ops.nodeCoord(node))
allNodeLocs=np.array(allNodeLocs) 

# creating zeroDOF connections for everything within a particular tolerance of one another

for node in allNodes:
    nearNode=np.where((np.abs(allNodeLocs - ops.nodeCoord(node)[:])<=[4e-2,4e-2,4e-2]).all(axis=1))[:]
    nearNode=nearNode[0][:]
    print(nearNode)
    #try:
    for nearNodeCurr in nearNode:
    	rNodeTag=allNodes[nearNodeCurr]

    	cNodeTag=node
    	print('cNodeTag',cNodeTag)
    	print('rNodeTag',rNodeTag)
    	if cNodeTag==rNodeTag:
            pass
    	elif cNodeTag in rNodes:
            pass
    	elif cNodeTag in cNodes:
            pass
    	else:
	        if rNodeTag in cNodes:
 	            pass
# 	            cNodeTag1=cNodeTag
# 	            cNodeTag=rNodeTag
# 	            rNodeTag=cNodeTag1
# 	            print('cNodeTag',cNodeTag)
# 	            print('rNodeTag',rNodeTag)
# 	            if rNodeTag in cNodes:
# 	                pass
# 	            else:
#             		if constraintType=='EQDOF': 
#             			ops.equalDOF(rNodeTag, cNodeTag, *dofs)
#             		elif constraintType=='RIGIDLINK':	
#             			ops.rigidLink('beam', rNodeTag, cNodeTag)
#             		elif constraintType=='EQDOFMIXED':
#             			ops.equalDOF_Mixed(rNodeTag, cNodeTag, numDOF, *rcdofs)
#             		print('Found a node with matching location, creating EQ DOF connection')
#             		cNodes.append(cNodeTag)
        	else:
        		if constraintType=='EQDOF': 
        			ops.equalDOF(rNodeTag, cNodeTag, *dofs)
        		elif constraintType=='RIGIDLINK':	
        			ops.rigidLink('beam', rNodeTag, cNodeTag)
        		elif constraintType=='EQDOFMIXED':
        			ops.equalDOF_Mixed(rNodeTag, cNodeTag, numDOF, *rcdofs)
        		print('Found a node with matching location, creating EQ DOF connection')
        		cNodes.append(cNodeTag)
    #except:
    #    pass

nodeRecInfoList=[]

nodeRecInfoList.append(['frontRightCFTReactionAtFlumeFloor.out',1000000,'reaction'])
nodeRecInfoList.append(['frontLeftCFTReactionAtFlumeFloor.out',1001000,'reaction'])
nodeRecInfoList.append(['backLeftCFTReactionAtFlumeFloor.out',1002000,'reaction'])
nodeRecInfoList.append(['backRightCFTReactionAtFlumeFloor.out',1003000,'reaction'])
nodeRecInfoList.append(['frontRightCFTReaction.out',123456780,'reaction'])
nodeRecInfoList.append(['frontLeftCFTReaction.out',123456781,'reaction'])
nodeRecInfoList.append(['backLeftCFTReaction.out',123456782,'reaction'])
nodeRecInfoList.append(['backRightCFTReaction.out',123456783,'reaction'])

FOAMySeesInstance.nodeRecInfoList=nodeRecInfoList

ops.recorder('Node', '-file', 'frontRightCFTReactionAtFlumeFloor.out','-time', '-node', 1000000, '-dof', 1,2,3,4,5,6, 'reaction')
ops.recorder('Node', '-file', 'frontLeftCFTReactionAtFlumeFloor.out','-time', '-node',1001000, '-dof', 1,2,3,4,5,6, 'reaction')
ops.recorder('Node', '-file', 'backLeftCFTReactionAtFlumeFloor.out','-time', '-node', 1002000, '-dof', 1,2,3,4,5,6, 'reaction')
ops.recorder('Node', '-file', 'backRightCFTReactionAtFlumeFloor.out','-time', '-node',1003000, '-dof', 1,2,3,4,5,6, 'reaction')


ops.recorder('Node', '-file', 'frontRightCFTReaction.out','-time', '-node', 123456780, '-dof', 1,2,3,4,5,6, 'reaction')
ops.recorder('Node', '-file', 'frontLeftCFTReaction.out','-time', '-node',123456781, '-dof', 1,2,3,4,5,6, 'reaction')
ops.recorder('Node', '-file', 'backLeftCFTReaction.out','-time', '-node', 123456782, '-dof', 1,2,3,4,5,6, 'reaction')
ops.recorder('Node', '-file', 'backRightCFTReaction.out','-time', '-node',123456783, '-dof', 1,2,3,4,5,6, 'reaction')
res=['disp','vel','accel','incrDisp','reaction','pressure','unbalancedLoad','mass']

ops.recorder('PVD', 'output', '-precision', 4, '-dT', .05, *res)
beep=0
for SGE in StrainGaugeElements:
    beep+=1
    ops.recorder('Element','-ele',SGE,'-file',str(beep)+'fiber.out','section','fiber',OuterRad,0,600,'stressStrain')


z1=0.05
z2=0.15
f2=100000
f1=100


alphaM = 0.000 # (4*3.1415*f1*f2)*((z1*f2 - z2*f1)/(f2**2 - f1**2))               # M-prop. damping; D = alphaM*M    

betaKcurr = 00.00 # K-proportional damping;      +beatKcurr*KCurrent <- not this

betaKinit = ((z1*f2 - z2*f1)/(3.1415*(f2**2 - f1**2))) # initial-stiffness proportional damping      +beatKinit*Kini <<<<<<<<<------------------------------ use this 
betaKcomm = 0.0
ops.rayleigh(alphaM,betaKcurr, betaKinit, betaKcomm) # RAYLEIGH damping
# for soiln in soilnodes:
    
    # ops.recorder('Node', '-file', 'SoilNode'+str(soiln)+'Reaction.out','-time', '-node',soiln, '-dof', 1,2,3,4,5,6, 'reaction')

