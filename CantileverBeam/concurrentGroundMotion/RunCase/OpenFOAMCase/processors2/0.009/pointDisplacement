/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2406                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      binary;
    arch        "LSB;label=32;scalar=64";
    class       decomposedBlockData;
    object      pointDisplacement;
    data.format     ascii;
    data.class      pointVectorField;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


// processor0
967
(FoamFile
{
    version     2.0;
    format      ascii;
    arch        "LSB;label=32;scalar=64";
    class       pointVectorField;
    location    "0.009";
    object      pointDisplacement;
}
dimensions      [0 1 0 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    leftWall
    {
        type            fixedNormalSlip;
        n               (1 0 0);
    }
    rightWall
    {
        type            fixedNormalSlip;
        n               (1 0 0);
    }
    interface
    {
        type            fixedValue;
        value           nonuniform List<vector> 0();
    }
    atmosphere
    {
        type            fixedNormalSlip;
        n               (0 -1 0);
    }
    lowerWall
    {
        type            fixedNormalSlip;
        n               (0 -1 0);
    }
    defaultFaces
    {
        type            fixedNormalSlip;
        n               (0 0 1);
    }
    procBoundary0to1
    {
        type            processor;
    }
}
)

// processor1
762
(dimensions      [0 1 0 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    leftWall
    {
        type            fixedNormalSlip;
        n               (1 0 0);
    }
    rightWall
    {
        type            fixedNormalSlip;
        n               (1 0 0);
    }
    interface
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }
    atmosphere
    {
        type            fixedNormalSlip;
        n               (0 -1 0);
    }
    lowerWall
    {
        type            fixedNormalSlip;
        n               (0 -1 0);
    }
    defaultFaces
    {
        type            fixedNormalSlip;
        n               (0 0 1);
    }
    procBoundary1to0
    {
        type            processor;
    }
}
)
